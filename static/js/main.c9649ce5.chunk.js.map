{"version":3,"sources":["components/Container/Container.tsx","components/Logo/Logo.tsx","components/NavList/NavList.tsx","storage/PageSizeContext.tsx","components/IconBox/IconBox.tsx","components/Menu/Menu.tsx","helpers/getOptions.ts","storage/options.ts","components/Select/Select.tsx","helpers/searchHelpers.tsx","api/apiSlice.tsx","components/Filters/Filters.tsx","components/Filters/utils.ts","components/FiltersModal/FiltersModal.tsx","components/Nav/Nav.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","storage/notification.ts","storage/favorites.ts","app/hooks.ts","components/Notification/Notification.tsx","components/ScrollToTop/ScrollToTop.tsx","components/Loader/Loader.tsx","App.tsx","helpers/checkFav.ts","components/Baner/Baner.tsx","components/Services/Services.tsx","components/GivePet/GivePet.tsx","types/Notification.ts","components/FormField/FormField.tsx","components/QuestionForm/QuestionForm.tsx","components/ButtonHeart/utils.ts","components/ButtonHeart/ButtonHeart.tsx","components/AdoptBtn/AdoptBtn.tsx","helpers/getTitileCase.ts","components/PetCard/PetCard.tsx","components/ButtonMove/ButtonMove.tsx","components/Swiper/Swiper.tsx","components/PetsCarousel/PetsCarousel.tsx","helpers/getRandomArray.ts","pages/HomePage/HomePage.tsx","pages/ErrorPage/ErrorPage.tsx","components/ImageUpload/ImageUpload.tsx","components/FormPhoneField/FormPhoneField.tsx","components/AdoptForm/AdoptForm.tsx","helpers/appendFormData.ts","pages/AdoptionPage/AdoptionPage.tsx","pages/ContactUsPage/ContactUsPage.tsx","components/PetDetails/utils.ts","components/ImageComponent/ImageComponent.tsx","components/PetDetails/PetDetails.tsx","pages/PetDetailPage/PetDetailPage.tsx","components/PetsList/PetsList.tsx","components/NoResults/NoResults.tsx","pages/CatalogPage/CatalogPage.tsx","pages/FavoritesPage/FavoritesPage.tsx","components/PickUpForm/PickUpForm.tsx","components/ModalAdoptForm/ModalAdoptForm.tsx","Root.tsx","hooks/useLocalStorage.ts","app/store.ts","index.tsx"],"names":["Container","memo","children","className","Logo","to","src","getLinkClass","isActive","classNames","NavList","location","breakpoints","mobile","tablet","laptop","desktop","PageSizeContext","createContext","width","isMobileSize","isTabletSize","isLaptopSize","isDesktopSize","PageSizeProvider","setWidth","useState","window","innerWidth","setIsMobileSize","setIsTabletSize","setIsLaptopSize","setIsDesktopSize","useEffect","handleResize","newWidth","addEventListener","removeEventListener","value","Provider","IconBox","Menu","closeMenu","menuRef","useRef","observerRefValue","current","disableBodyScroll","enableBodyScroll","ref","onClick","getOptions","values","map","region","label","ukraineRegionsOptions","ageOptions","animalTypeOptions","genderOptions","getValue","fieldValue","options","find","option","CustomSelect","field","placeholder","id","isMulti","menuIsOpen","setMenuIsOpen","internalValue","setInternalValue","newInternalValue","classNamePrefix","isSearchable","autoFocus","onMenuOpen","onMenuClose","components","IndicatorSeparator","Option","props","type","readOnly","checked","data","style","marginRight","DropdownIndicator","onChange","selectedOption","styles","control","provided","state","borderRadius","height","backgroundColor","cursor","border","borderColor","isFocused","indicatorSeparator","display","menu","position","top","left","zIndex","overflowY","fontSize","padding","color","isSelected","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","delete","Array","isArray","part","append","set","PET_PATH","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getPets","query","providesTags","result","getFilterPets","searchParams","getPet","petId","addNewPet","mutation","initialPost","url","method","body","formData","invalidatesTags","pickUpRequest","contactUsRequest","useGetPetsQuery","useGetPetQuery","useGetFilterPetsQuery","useAddNewPetMutation","usePickUpRequestMutation","useContactUsRequestMutation","Filters","pets","setSearchParams","useSearchParams","age","get","gender","animalType","filterRegions","regions","pet","includes","push","getAvailableRegion","handleSubmit","register","reset","setValue","useForm","defaultValues","onSubmit","params","defaultChecked","htmlFor","name","render","undefined","FiltersModal","showForm","setShowForm","filterModalRef","event","target","currentTarget","CSSTransition","in","timeout","onExited","unmountOnExit","Nav","pathname","useLocation","useContext","isMenuOpen","setIsMenuOpen","isFiltersOpen","setIsFiltersOpen","useCallback","closeFilters","role","mountOnEnter","disabled","Header","Footer","href","rel","NotificationStatus","initialState","message","None","notificationSlice","createSlice","reducers","setNotification","action","payload","removeNotification","notificationActions","actions","notificationReducer","reducer","favoritesSlice","addFav","removeFav","filter","clearFav","favoritesReducer","favoritesActions","allActions","useAppDispatch","useDispatch","useAppSelector","useSelector","useActions","dispatch","bindActionCreators","Notification","notification","show","setShow","firstRenderRef","timer","setTimeout","clearTimeout","ScrollToTop","scrollTo","Loader","document","overflow","App","favorites","isLoading","petsLoading","length","needClearFav","favPet","checkFav","Baner","banerRef","banerInfoRef","firstLoad","setFirstLoad","handleScroll","banerInfo","baner","opacity","transform","alt","Services","GivePet","FormField","error","characterCount","maxCharacters","toLowerCase","QuestionForm","watch","formState","errors","isValid","mode","setIsloading","questionRef","unwrap","then","Success","catch","Error","finally","required","pattern","minLength","maxLength","email","ButtonHeart","isFav","favPets","some","currentPet","AdoptBtn","search","previousLocation","convertToTitleCase","str","replace","s","toUpperCase","PetCard","postImages","imageUrl","ButtonMove","direction","size","CardSwiper","swiperRef","Swiper","modules","Navigation","Grid","Keyboard","navigation","prevEl","nextEl","centeredSlides","grabCursor","slidesPerView","spaceBetween","watchOverflow","keyboard","enabled","pageUpDown","grid","rows","fill","slidesPerGroup","PetsCarousel","randomPets","useMemo","arr","shuffled","sort","Math","random","limit","slice","getRandomArray","HomePage","ErrorPage","ImageUpload","currentInput","handlePreviewChange","clearPreview","preview","setPreview","fileInputRef","handleImageChange","file","reader","FileReader","onloadend","readAsDataURL","e","preventDefault","click","accept","files","startsWith","FormPhoneField","country","defaultCountry","international","withCountryCallingCode","useNationalFormatForDefaultCountryValue","AdoptForm","setIsLoading","currentPhotoInput","setCurrentPhotoInput","addPet","getValues","isSubmitSuccessful","post","images","descriptionValue","imagesValue","newInputIndex","findIndex","photo","cur","index","updatedValues","FormData","dataToHandle","keys","image","File","serializedObject","JSON","stringify","Blob","appendFormData","ownerName","rules","ownerContactPhone","description","num","AdoptionPage","ContactUsPage","ImageComponent","base64Image","altText","PetDetails","selectedImg","setSelectedImg","isError","nextImg","prevSelectedImg","prevImg","characters","randomKey","randomIndex","floor","charAt","generateUniqueRandomKey","formatPhoneNumberIntl","PetDetailPage","useParams","PetsList","NoResults","CatalogPage","petsLoadError","isSearch","filteredPets","filterLoading","petsForList","petCount","Favourites","PickUpForm","handleFormClose","contactPhone","ModalAdoptForm","modalRef","nodeRef","navigate","useNavigate","isModalOpen","sessionStorage","getItem","handleClose","removeItem","clearAllBodyScrollLocks","setItem","onDoubleClick","appear","Root","path","element","saveToLocalStorage","newValue","serializedState","localStorage","combineReducers","favoritesInitialState","initialValue","parse","loadFromLocalStorage","createLogger","middleware","store","next","getState","configureStore","preloadedState","gDM","concat","subscribe","debounce","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c9649ce5.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport './Container.scss';\n\nexport const Container: React.FC = memo(({ children }) => {\n  return (\n    <div className=\"container\">\n      {children}\n    </div>\n  );\n});\n","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ReactSVG } from 'react-svg';\nimport './Logo.scss';\n\nexport const Logo: React.FC = memo(() => (\n  <Link to=\"/\" className=\"header__logo logo\">\n    <ReactSVG\n      src=\"img/Logo.svg\"\n    />\n  </Link>\n));\n","import './NavList.scss';\nimport { NavLink } from 'react-router-dom';\nimport React, { memo } from 'react';\nimport classNames from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'nav-list__item', 'nav-list__item-after',\n  { 'nav-list__item--is-active': isActive },\n);\n\ntype Props = {\n  location?: string;\n};\n\nexport const NavList: React.FC<Props> = memo(({ location = 'header' }) => {\n  return (\n    <div\n      className={classNames(\n        'nav-list__items',\n        `nav-list__items--${location}`,\n      )}\n    >\n      <NavLink\n        to=\"/\"\n        className={getLinkClass}\n      >\n        About us\n      </NavLink>\n\n      <NavLink\n        to=\"/give-for-adoption\"\n        className={getLinkClass}\n      >\n        Give for Adoption\n      </NavLink>\n\n      <NavLink\n        to=\"/favorites\"\n        className={getLinkClass}\n      >\n        Favorited Pets\n      </NavLink>\n\n      <NavLink\n        to=\"/contacts\"\n        className={getLinkClass}\n      >\n        Contact us\n      </NavLink>\n    </div>\n  );\n});\n","import React, { useEffect, useState, createContext } from 'react';\n\ntype Context = {\n  width: number,\n  isMobileSize: boolean,\n  isTabletSize: boolean,\n  isLaptopSize: boolean,\n  isDesktopSize: boolean,\n};\n\nconst breakpoints = {\n  mobile: 320,\n  tablet: 640,\n  laptop: 1024,\n  desktop: 1440,\n};\n\nexport const PageSizeContext = createContext<Context>({\n  width: 0,\n  isMobileSize: false,\n  isTabletSize: false,\n  isLaptopSize: false,\n  isDesktopSize: false,\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const PageSizeProvider: React.FC<Props> = ({ children }) => {\n  const {\n    tablet, laptop, desktop,\n  } = breakpoints;\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const [isMobileSize, setIsMobileSize] = useState(width < tablet);\n  const [isTabletSize, setIsTabletSize] = useState(\n    width >= tablet && width < laptop,\n  );\n  const [isLaptopSize, setIsLaptopSize] = useState(\n    width >= laptop && width < desktop,\n  );\n  const [isDesktopSize, setIsDesktopSize] = useState(width >= desktop);\n\n  useEffect(() => {\n    const handleResize = () => {\n      const newWidth = window.innerWidth;\n\n      setWidth(newWidth);\n      setIsDesktopSize(newWidth >= desktop);\n      setIsLaptopSize(newWidth >= laptop && newWidth < desktop);\n      setIsTabletSize(\n        newWidth >= tablet && newWidth < laptop,\n      );\n      setIsMobileSize(newWidth < laptop);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [width]);\n\n  const value = {\n    width,\n    isMobileSize,\n    isTabletSize,\n    isLaptopSize,\n    isDesktopSize,\n  };\n\n  return (\n    <PageSizeContext.Provider value={value}>\n      {children}\n    </PageSizeContext.Provider>\n  );\n};\n","import './IconBox.scss';\nimport React, { memo } from 'react';\n\nexport const IconBox: React.FC = memo(({ children }) => (\n  <div className=\"icon__box\">\n    {children}\n  </div>\n));\n","import './Menu.scss';\nimport React, { memo, useEffect, useRef } from 'react';\nimport { ReactSVG } from 'react-svg';\nimport { Link } from 'react-router-dom';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport { Logo } from '../Logo';\nimport { IconBox } from '../IconBox';\n\ntype Props = {\n  closeMenu: () => void;\n};\n\nexport const Menu: React.FC<Props> = memo(({ closeMenu }) => {\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const observerRefValue = menuRef.current;\n\n    if (!observerRefValue) {\n      return undefined;\n    }\n\n    disableBodyScroll(observerRefValue);\n\n    return () => observerRefValue && enableBodyScroll(observerRefValue);\n  }, []);\n\n  return (\n    <aside className=\"menu\" ref={menuRef}>\n      <div className=\"menu__top\">\n        <Logo />\n\n        <div className=\"menu__icon-link menu__icon-link--close\">\n          <IconBox>\n            <ReactSVG\n              src=\"img/icon/close.svg\"\n              onClick={closeMenu}\n            />\n          </IconBox>\n        </div>\n      </div>\n\n      <ul className=\"menu__list\">\n        <li className=\"menu__item\">\n          <Link\n            to=\"/\"\n            className=\"menu__link\"\n            onClick={closeMenu}\n          >\n            About us\n          </Link>\n        </li>\n\n        <li className=\"menu__item\">\n          <Link\n            to=\"/give-for-adoption\"\n            className=\"menu__link\"\n            onClick={closeMenu}\n          >\n            Give for Adoption\n          </Link>\n        </li>\n\n        <li className=\"menu__item\">\n          <Link\n            to=\"/favorites\"\n            className=\"menu__link\"\n            onClick={closeMenu}\n          >\n            Favorited Pets\n          </Link>\n        </li>\n\n        <li className=\"menu__item\">\n          <Link\n            to=\"/contacts\"\n            className=\"menu__link\"\n            onClick={closeMenu}\n          >\n            Contact us\n          </Link>\n        </li>\n      </ul>\n    </aside>\n  );\n});\n","import { SelectOption } from '../types/SelectOptions';\n\nexport const getOptions = (values: string[]) => {\n  const newOptions: SelectOption[] = values.map((region) => ({\n    value: region,\n    label: region,\n  }));\n\n  return newOptions;\n};\n","import { SelectOption } from '../types/SelectOptions';\nimport { getOptions } from '../helpers/getOptions';\n\nexport const ukraineRegions = [\n  'Kyivska Oblast',\n  'Kharkivska Oblast',\n  'Lvivska Oblast',\n  'Dnipropetrovska Oblast',\n  'Odeska Oblast',\n  'Donetska Oblast',\n  'Zaporizka Oblast',\n  'Ivano-Frankivska Oblast',\n  'Zhytomyrska Oblast',\n  'Khmelnytska Oblast',\n  'Chernivetska Oblast',\n  'Mykolaivska Oblast',\n  'Vinnytska Oblast',\n  'Ternopilska Oblast',\n  'Cherkaska Oblast',\n  'Sumy Oblast',\n  'Rivnenska Oblast',\n  'Chernihivska Oblast',\n  'Zakarpatska Oblast',\n  'Volynska Oblast',\n  'Kirovohradska Oblast',\n  'Poltavska Oblast',\n  'Khersonska Oblast',\n  'Luhanska Oblast',\n];\n\nexport const ukraineRegionsOptions: SelectOption[] = getOptions(ukraineRegions);\n\nexport const ageOptions: readonly SelectOption[] = [\n  { value: '0-1', label: '0-1 years' },\n  { value: '1-2', label: '1-2 years' },\n  { value: '2-5', label: '2-5 years' },\n  { value: '5+', label: '5+ years' },\n];\n\nexport const animalTypeOptions: readonly SelectOption[] = [\n  { value: 'CAT', label: 'Cat' },\n  { value: 'DOG', label: 'Dog' },\n];\n\nexport const genderOptions: readonly SelectOption[] = [\n  { value: 'MALE', label: 'Male' },\n  { value: 'FEMALE', label: 'Female' },\n];\n","import React, { useState, memo, useEffect } from 'react';\nimport { ReactSVG } from 'react-svg';\nimport Select, {\n  components,\n  DropdownIndicatorProps,\n  OptionProps,\n  StylesConfig,\n} from 'react-select';\nimport './Select.scss';\nimport { SelectOption } from '../../types/SelectOptions';\n\nconst getValue = (fieldValue: string, options: readonly SelectOption[]) => {\n  if (fieldValue) {\n    return options.find((option) => option.value === fieldValue);\n  }\n\n  return undefined;\n};\n\ntype Props = {\n  options: readonly SelectOption[];\n  placeholder: string;\n  field: any;\n  isMulti?: boolean;\n  id: string;\n};\n\nconst CustomSelect: React.FC<Props> = memo(({\n  options, field, placeholder, id, isMulti = false,\n}) => {\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n  const [internalValue, setInternalValue] = useState(\n    getValue(field?.value, options),\n  );\n\n  const CustomOption = (\n    props: OptionProps<SelectOption, true>,\n  ) => {\n    return (\n      <components.Option {...props}>\n        <input\n          type=\"checkbox\"\n          readOnly\n          checked={field.value === props.data.value}\n          style={{ marginRight: '8px' }}\n        />\n        {props.children}\n      </components.Option>\n    );\n  };\n\n  const CustomDropdownIndicator = (\n    props: DropdownIndicatorProps<SelectOption, true>,\n  ) => {\n    return (\n      <components.DropdownIndicator {...props}>\n        <ReactSVG\n          src={menuIsOpen\n            ? 'img/icon/arrow-up.svg'\n            : 'img/icon/arrow-down.svg'}\n        />\n      </components.DropdownIndicator>\n    );\n  };\n\n  const customStyles: StylesConfig<SelectOption> = {\n    control: (provided, state) => ({\n      ...provided,\n      borderRadius: '6px',\n      height: '100%',\n      backgroundColor: 'inherit',\n      cursor: 'pointer',\n      border: '1px solid #D1D1D2',\n      borderColor: state.isFocused ? '#90B5FF' : '#D1D1D2',\n      ':hover': {\n        borderColor: '#0E5FFF',\n      },\n    }),\n    indicatorSeparator: () => ({\n      display: 'none',\n    }),\n    menu: (provided) => ({\n      ...provided,\n      position: 'absolute',\n      top: '100%',\n      left: '0',\n      zIndex: 1,\n      border: '1px solid #90B5FF',\n      borderRadius: '6px',\n      overflowY: 'auto',\n      fontSize: '18px',\n    }),\n    option: (provided, state) => ({\n      ...provided,\n      padding: '8px',\n      color: state.isSelected ? '#0A43B5' : '#454545',\n      backgroundColor: state.isSelected ? '#FDFDFD' : '#FDFDFD',\n      cursor: 'pointer',\n      ':hover': {\n        backgroundColor: '#f1f1f1',\n        color: '#3E7FFF',\n      },\n    }),\n    placeholder: (provided) => ({\n      ...provided,\n      color: '#ebebec;',\n    }),\n  };\n\n  useEffect(() => {\n    const newInternalValue = getValue(field?.value, options);\n\n    setInternalValue(newInternalValue);\n  }, [field?.value, options]);\n\n  return (\n    <div className=\"custom-dropdown\">\n      <Select\n        {...field}\n        classNamePrefix=\"custom-select\"\n        className=\"custom-select-container\"\n        options={options}\n        value={internalValue || null}\n        placeholder={placeholder}\n        isSearchable\n        autoFocus={false}\n        isMulti={isMulti}\n        onMenuOpen={() => setMenuIsOpen(true)}\n        onMenuClose={() => setMenuIsOpen(false)}\n        components={{\n          IndicatorSeparator: () => null,\n          Option: CustomOption,\n          DropdownIndicator: CustomDropdownIndicator,\n        }}\n        onChange={(selectedOption: SelectOption) => {\n          field.onChange(selectedOption.value);\n        }}\n        styles={customStyles}\n        id={id}\n      />\n    </div>\n  );\n});\n\nexport default CustomSelect;\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value) {\n        if (value === null) {\n          newParams.delete(key);\n        } else if (Array.isArray(value)) {\n          newParams.delete(key);\n\n          value.forEach(part => {\n            newParams.append(key, part);\n          });\n        } else {\n          newParams.set(key, value);\n        }\n      }\n    });\n\n  return newParams.toString();\n}\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { Pet } from '../types/Pet';\nimport { PickUpFormFields } from '../types/PickUpForm';\nimport { ContactForm } from '../types/ContactForm';\n\nexport const BASE_API_URL = 'https://pets-home-e9b90f16b6b9.herokuapp.com';\n\nconst PET_PATH = 'animal_posts';\n\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: BASE_API_URL,\n  }),\n  tagTypes: ['Pets'],\n  endpoints: (builder) => ({\n    getPets: builder.query<Pet[], void | string>({\n      query: () => PET_PATH,\n      providesTags: (result: Pet[] | undefined) => {\n        if (result) {\n          return [\n            ...result.map(({ id }) => ({ type: 'Pets' as const, id })),\n            { type: 'Pets', id: 'LIST' },\n          ];\n        }\n\n        return [{ type: 'Pets', id: 'LIST' }];\n      },\n    }),\n    getFilterPets: builder.query<Pet[], string>({\n      query: (searchParams) => `/${PET_PATH}/search?${searchParams}`,\n    }),\n    getPet: builder.query<Pet, number>({\n      query: (petId) => `/${PET_PATH}/${petId}`,\n    }),\n    addNewPet: builder.mutation<unknown, FormData>({\n      query: (initialPost) => ({\n        url: PET_PATH,\n        method: 'POST',\n        body: initialPost,\n        formData: true,\n      }),\n      invalidatesTags: ['Pets'],\n    }),\n    pickUpRequest: builder.mutation<unknown, PickUpFormFields>({\n      query: (data) => ({\n        url: `${PET_PATH}/${data.id}/adopt`,\n        method: 'POST',\n        body: data,\n      }),\n    }),\n    contactUsRequest: builder.mutation<unknown, ContactForm>({\n      query: (data) => ({\n        url: 'contact_us',\n        method: 'POST',\n        body: data,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetPetsQuery, useGetPetQuery,\n  useGetFilterPetsQuery, useAddNewPetMutation,\n  usePickUpRequestMutation, useContactUsRequestMutation,\n} = apiSlice;\n","import React, { memo, useEffect } from 'react';\nimport './Filters.scss';\nimport { ReactSVG } from 'react-svg';\nimport { useSearchParams } from 'react-router-dom';\nimport { useForm, SubmitHandler, Controller } from 'react-hook-form';\nimport {\n  ageOptions, animalTypeOptions, genderOptions,\n} from '../../storage/options';\nimport { FiltersType } from '../../types/Filters';\nimport CustomSelect from '../Select/Select';\nimport { getSearchWith } from '../../helpers/searchHelpers';\nimport { getAvailableRegion } from './utils';\nimport { useGetPetsQuery } from '../../api/apiSlice';\n\ntype Props = {\n  closeMenu?: () => void;\n};\n\nexport const Filters: React.FC<Props> = memo(({ closeMenu }) => {\n  const { data: pets } = useGetPetsQuery();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const age = searchParams.get('age') || '';\n  const gender = searchParams.get('gender') || '';\n  const location = searchParams.get('location') || '';\n  const animalType = searchParams.get('animalType') || '';\n  const filterRegions = pets ? getAvailableRegion(pets) : [];\n\n  const {\n    handleSubmit,\n    control,\n    register,\n    reset,\n    setValue,\n  } = useForm<FiltersType>({\n    defaultValues: {\n      age,\n      animalType,\n      location,\n      gender,\n    },\n  });\n\n  const onSubmit: SubmitHandler<FiltersType> = (data: FiltersType) => {\n    const emptySearchParams = new URLSearchParams();\n    const params = getSearchWith(emptySearchParams, data);\n\n    setSearchParams(params);\n\n    if (closeMenu) {\n      closeMenu();\n    }\n  };\n\n  const handleReset = () => {\n    reset();\n\n    if (closeMenu) {\n      closeMenu();\n    }\n\n    setSearchParams(undefined);\n  };\n\n  const updateFormValuesFromSearchParams = () => {\n    setValue('age', age);\n    setValue('gender', gender);\n    setValue('location', location);\n    setValue('animalType', animalType);\n  };\n\n  useEffect(() => {\n    updateFormValuesFromSearchParams();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams]);\n\n  return (\n    <div className=\"filters\">\n      <form className=\"filters__form\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"filters__field\">\n          <div className=\"filters__type\">\n            <div className=\"filters__icon-box\">\n              <ReactSVG src=\"img/icon/paw.svg\" className=\"filters__type-icon\" />\n            </div>\n            Animal type\n          </div>\n\n          <div className=\"filters__options\">\n            <div className=\"filters__radio-button\">\n              <input\n                type=\"radio\"\n                id=\"all-type\"\n                value=\"\"\n                defaultChecked={animalType === ''}\n                {...register('animalType')}\n                className=\"filters__radio-button\"\n              />\n              <label htmlFor=\"all-type\" className=\"filters__custom-radio-label\">\n                <span className=\"filters__custom-radio\" />\n                All\n              </label>\n            </div>\n\n            {animalTypeOptions.map((option) => (\n              <div key={option.value} className=\"filters__radio-button\">\n                <input\n                  type=\"radio\"\n                  id={option.label}\n                  value={option.value}\n                  {...register('animalType')}\n                  className=\"filters__radio-button\"\n                />\n                <label\n                  htmlFor={option.label}\n                  className=\"filters__custom-radio-label\"\n                >\n                  <span className=\"filters__custom-radio\" />\n\n                  {option.label}\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"filters__field\">\n          <div className=\"filters__type\">\n            <div className=\"filters__icon-box\">\n              <ReactSVG\n                src=\"img/icon/gender.svg\"\n                className=\"filters__type-icon\"\n              />\n            </div>\n            Gender\n          </div>\n\n          <div className=\"filters__options\">\n            <div className=\"filters__radio-button\">\n              <input\n                type=\"radio\"\n                id=\"all-gender\"\n                value=\"\"\n                defaultChecked={gender === ''}\n                {...register('gender')}\n                className=\"filters__radio-button\"\n              />\n              <label\n                htmlFor=\"all-gender\"\n                className=\"filters__custom-radio-label\"\n              >\n                <span className=\"filters__custom-radio\" />\n                All\n              </label>\n            </div>\n\n            {genderOptions.map((option) => (\n              <div key={option.value} className=\"filters__radio-button\">\n                <input\n                  type=\"radio\"\n                  id={option.label}\n                  value={option.value}\n                  {...register('gender')}\n                  className=\"filters__radio-button\"\n                />\n                <label\n                  htmlFor={option.label}\n                  className=\"filters__custom-radio-label\"\n                >\n                  <span className=\"filters__custom-radio\" />\n\n                  {option.label}\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"filters__field\">\n          <div className=\"filters__type\">\n            <div className=\"filters__icon-box\">\n              <ReactSVG\n                src=\"img/icon/calendar.svg\"\n                className=\"filters__type-icon\"\n              />\n            </div>\n            Age\n          </div>\n\n          <div className=\"filters__options\">\n            <div className=\"filters__radio-button\">\n              <input\n                type=\"radio\"\n                id=\"all-ages\"\n                value=\"\"\n                defaultChecked={age === ''}\n                {...register('age')}\n                className=\"filters__radio-button\"\n              />\n              <label htmlFor=\"all-ages\" className=\"filters__custom-radio-label\">\n                <span className=\"filters__custom-radio\" />\n                All\n              </label>\n            </div>\n\n            {ageOptions.map((option) => (\n              <div\n                className=\"filters__radio-button\"\n                key={option.value}\n              >\n                <input\n                  type=\"radio\"\n                  id={option.value}\n                  value={option.value}\n                  {...register('age')}\n                  className=\"filters__radio-button\"\n                />\n                <label\n                  htmlFor={option.value}\n                  className=\"filters__custom-radio-label\"\n                >\n                  <span className=\"filters__custom-radio\" />\n\n                  {option.label}\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"filters__field\">\n          <div className=\"filters__type\">\n            <div className=\"filters__icon-box\">\n              <ReactSVG\n                src=\"img/icon/location.svg\"\n                className=\"filters__type-icon\"\n              />\n            </div>\n            Location\n          </div>\n\n          <div className=\"filters__location-select\">\n            <Controller\n              name=\"location\"\n              control={control}\n              render={({ field }) => (\n                <CustomSelect\n                  id=\"location\"\n                  options={filterRegions}\n                  field={field}\n                  placeholder=\"All regions\"\n                />\n              )}\n            />\n          </div>\n        </div>\n\n        <div className=\"filters__buttons\">\n          <button\n            type=\"submit\"\n            className=\"filters__button\"\n          >\n            Apply\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"filters__button\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n});\n","import { Pet } from '../../types/Pet';\nimport { getOptions } from '../../helpers/getOptions';\n\nexport const getAvailableRegion = (pets: Pet[]) => {\n  const regions: string[] = [];\n\n  pets.forEach(pet => {\n    if (!regions.includes(pet.location)) {\n      regions.push(pet.location);\n    }\n  });\n\n  const regionOptions = getOptions(regions);\n\n  return regionOptions;\n};\n","import './FiltersModal.scss';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { ReactSVG } from 'react-svg';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport { Filters } from '../Filters/Filters';\nimport { IconBox } from '../IconBox';\n\ntype Props = {\n  closeMenu: () => void;\n};\n\nexport const FiltersModal: React.FC<Props> = memo(({ closeMenu }) => {\n  const [showForm, setShowForm] = useState(false);\n  const filterModalRef = useRef<HTMLDivElement>(null);\n\n  const handleModalClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => {\n    if (event.target === event.currentTarget) {\n      setShowForm(false);\n    }\n  };\n\n  useEffect(() => {\n    setShowForm(true);\n    const observerRefValue = filterModalRef.current;\n\n    if (!observerRefValue) {\n      return undefined;\n    }\n\n    disableBodyScroll(observerRefValue);\n\n    return () => observerRefValue && enableBodyScroll(observerRefValue);\n  }, []);\n\n  return (\n    <div\n      className=\"filters-modal\"\n      onClick={handleModalClick}\n      ref={filterModalRef}\n      aria-hidden\n    >\n      <CSSTransition\n        in={showForm}\n        timeout={300}\n        classNames=\"modal-fade\"\n        onExited={closeMenu}\n        unmountOnExit\n      >\n        <div className=\"filters-modal__content\">\n          <div className=\"filters-modal__top\">\n            <h3 className=\"filters-modal__title\">\n              Filters:\n            </h3>\n\n            <div\n              className=\"\n              filters-modal__icon-link\"\n            >\n              <IconBox>\n                <ReactSVG\n                  src=\"img/icon/close.svg\"\n                  onClick={() => setShowForm(false)}\n                />\n              </IconBox>\n            </div>\n          </div>\n\n          <Filters\n            closeMenu={closeMenu}\n          />\n        </div>\n      </CSSTransition>\n\n    </div>\n  );\n});\n","import './Nav.scss';\nimport { Link, useLocation } from 'react-router-dom';\nimport React, {\n  memo, useCallback, useContext, useState,\n} from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { ReactSVG } from 'react-svg';\nimport { Logo } from '../Logo';\nimport { NavList } from '../NavList';\nimport { PageSizeContext } from '../../storage/PageSizeContext';\nimport { Menu } from '../Menu';\nimport { FiltersModal } from '../FiltersModal';\n\nexport const Nav: React.FC = memo(() => {\n  const { pathname } = useLocation();\n  const {\n    isMobileSize, isTabletSize, isDesktopSize, isLaptopSize,\n  } = useContext(PageSizeContext);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isFiltersOpen, setIsFiltersOpen] = useState(false);\n  const closeMenu = useCallback(() => setIsMenuOpen(false), []);\n  const closeFilters = useCallback(() => setIsFiltersOpen(false), []);\n\n  return (\n    <nav\n      className=\"header_navbar navbar\"\n      data-cy=\"nav\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      {(isMobileSize || isTabletSize) && (\n        <>\n          <Logo />\n\n          <div className=\"navbar__top-buttons\">\n            {pathname === '/pets' ? (\n              <button\n                type=\"button\"\n                onClick={() => setIsFiltersOpen(true)}\n                className=\"navbar__filters-btn\"\n              >\n                <ReactSVG\n                  src=\"img/icon/filter.svg\"\n                />\n\n                Filters\n              </button>\n            ) : (\n              <Link\n                to=\"/pets\"\n                className=\"navbar__adopt-link\"\n              >\n                Adoption\n              </Link>\n            )}\n\n            <ReactSVG\n              src=\"img/icon/Burger.svg\"\n              className=\"navbar__open-menu-btn\"\n              onClick={() => setIsMenuOpen(true)}\n            />\n          </div>\n        </>\n      )}\n\n      <CSSTransition\n        in={isMenuOpen}\n        timeout={1000}\n        classNames=\"menu\"\n        mountOnEnter\n        unmountOnExit\n      >\n        <Menu closeMenu={closeMenu} />\n      </CSSTransition>\n\n      <CSSTransition\n        in={isFiltersOpen}\n        timeout={300}\n        classNames=\"filters-modal\"\n        mountOnEnter\n        unmountOnExit\n      >\n        <FiltersModal closeMenu={closeFilters} />\n      </CSSTransition>\n\n      {(isDesktopSize || isLaptopSize) && (\n        <>\n          <Logo />\n\n          <NavList />\n\n          <button\n            className=\"navbar__adopt-link\"\n            type=\"button\"\n            disabled={pathname === '/pets'}\n          >\n            <Link\n              to=\"/pets\"\n            >\n              Adoption\n            </Link>\n          </button>\n        </>\n      )}\n    </nav>\n  );\n});\n","import './Header.scss';\nimport React, { memo } from 'react';\nimport { Nav } from '../Nav';\n\nexport const Header: React.FC = memo(() => {\n  return (\n    <header\n      className=\"header\"\n    >\n      <Nav />\n    </header>\n  );\n});\n","import React, { memo } from 'react';\nimport { Logo } from '../Logo';\nimport './Footer.scss';\nimport { Container } from '../Container';\nimport { NavList } from '../NavList';\n\nexport const Footer: React.FC = memo(() => (\n  <footer className=\"footer\">\n    <Container>\n      <div className=\"footer__content\">\n        <div className=\"footer__item footer__item--logo\">\n          <Logo />\n        </div>\n\n        <div className=\"footer__item footer__item--nav\">\n          <div className=\"footer__item-list\">\n            <NavList\n              location=\"footer\"\n            />\n          </div>\n        </div>\n\n        <div className=\"footer__item footer__item--contacts\">\n          <ul className=\"footer__item-list--contacts footer__item-list\">\n            <li className=\"footer__contact-info\">\n              <p className=\"footer__contact-title\">\n                Physical address\n              </p>\n              <a\n                href=\"https://maps.app.goo.gl/VhAycvH7Cek52o5a6\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className=\"footer__contact-link\"\n              >\n                Lviv city, Frankivsk district, Naukova Street 32,\n                <br />\n                Organization for homeless animals &quot;Pets Home&quot;\n              </a>\n            </li>\n\n            <li className=\"footer__contact-info\">\n              <p className=\"footer__contact-title\">\n                Contact phone\n              </p>\n              <a\n                href=\"tel:+380669718922\"\n                className=\"footer__contact-link\"\n              >\n                +38 066 971 89 22\n              </a>\n            </li>\n\n            <li className=\"footer__contact-info\">\n              <p className=\"footer__contact-title\">\n                E-mail address\n              </p>\n              <a\n                href=\"mailto:pets_home@gmail.com\"\n                className=\"footer__contact-link\"\n              >\n                pets_home@gmail.com\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"footer__item footer__item--rights\">\n          <p className=\"footer__team-name\">\n            Mates Team\n          </p>\n\n          <p className=\"footer__rights-text\">\n            © 2024. All rights reserved\n          </p>\n        </div>\n      </div>\n    </Container>\n  </footer>\n));\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport enum NotificationStatus {\n  Success = '#27ae60',\n  Warning = '#F3D060',\n  Error = '#BA0C2E',\n  None = 'transparent',\n}\n\nexport type NotificationType = {\n  message: string;\n  color: NotificationStatus;\n};\n\nconst initialState: NotificationType = {\n  message: '',\n  color: NotificationStatus.None,\n};\n\nconst notificationSlice = createSlice({\n  name: 'notification',\n  initialState,\n  reducers: {\n    setNotification: (state, action: PayloadAction<NotificationType>) => {\n      state.message = action.payload.message;\n      state.color = action.payload.color;\n    },\n    removeNotification: (state) => {\n      state.color = NotificationStatus.None;\n      state.message = '';\n    },\n  },\n});\n\nexport const notificationActions = notificationSlice.actions;\nexport const notificationReducer = notificationSlice.reducer;\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Pet } from '../types/Pet';\n\nconst favoritesSlice = createSlice({\n  name: 'favorites',\n  initialState: [] as Pet[],\n  reducers: {\n    addFav: (state, action: PayloadAction<Pet>) => {\n      state.push(action.payload);\n    },\n    removeFav: (state, action: PayloadAction<Pet>) => {\n      return state.filter((pet) => pet.id !== action.payload.id);\n    },\n    clearFav: () => [],\n  },\n});\n\nexport const favoritesReducer = favoritesSlice.reducer;\nexport const favoritesActions = favoritesSlice.actions;\nexport const { addFav, removeFav } = favoritesSlice.actions;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ThunkDispatch } from '@reduxjs/toolkit';\nimport type { TypeRootState, AppDispatch } from './store';\nimport { notificationActions } from '../storage/notification';\nimport { favoritesActions } from '../storage/favorites';\n\nconst allActions = {\n  ...notificationActions,\n  ...favoritesActions,\n};\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<TypeRootState> = useSelector;\n\nexport const useThunkDispatch = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  return dispatch as ThunkDispatch<TypeRootState, void, any>;\n};\n\nexport const useActions = () => {\n  const dispatch = useAppDispatch();\n\n  return bindActionCreators(allActions, dispatch);\n};\n","/* eslint-disable consistent-return */\nimport { CSSTransition } from 'react-transition-group';\nimport './Notification.scss';\nimport React, {\n  useEffect, useRef, useState, memo,\n} from 'react';\nimport { useActions, useAppSelector } from '../../app/hooks';\n\nexport const Notification: React.FC = memo(() => {\n  const notification = useAppSelector(state => state.notification);\n  const [show, setShow] = useState(false);\n  const firstRenderRef = useRef(true);\n  const { removeNotification } = useActions();\n\n  useEffect(() => {\n    if (firstRenderRef.current) {\n      firstRenderRef.current = false;\n\n      return;\n    }\n\n    if (!notification.message) {\n      return;\n    }\n\n    setShow(true);\n\n    const timer = setTimeout(() => {\n      setShow(false);\n      removeNotification();\n    }, 2000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [notification]);\n\n  return (\n    <CSSTransition\n      in={show}\n      timeout={1000}\n      classNames=\"notification\"\n      unmountOnExit\n    >\n      <h2\n        className=\"notification\"\n        style={{ color: notification.color }}\n      >\n        <p>{notification.message}</p>\n      </h2>\n    </CSSTransition>\n  );\n});\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport const ScrollToTop = () => {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n};\n","import './Loader.scss';\nimport React, { useEffect } from 'react';\n\nexport const Loader: React.FC = () => {\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      document.body.style.overflow = 'initial';\n    };\n  });\n\n  return (\n    <div className=\"loader-overlay\">\n      <div className=\"loader-spinner\"></div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Container } from './components/Container';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\nimport { Notification } from './components/Notification';\nimport { ScrollToTop } from './components/ScrollToTop/ScrollToTop';\nimport { useGetPetsQuery } from './api/apiSlice';\nimport { Loader } from './components/Loader';\nimport { useActions, useAppSelector } from './app/hooks';\nimport { checkFav } from './helpers/checkFav';\n\nconst App: React.FC = () => {\n  const favorites = useAppSelector(state => state.favorites);\n  const { clearFav } = useActions();\n  const {\n    data: pets,\n    isLoading: petsLoading,\n  } = useGetPetsQuery();\n\n  if (favorites.length && pets?.length) {\n    const needClearFav = checkFav(pets, favorites[0]);\n\n    if (needClearFav) {\n      clearFav();\n    }\n  }\n\n  return (\n    <div className=\"page\">\n      {petsLoading && (\n        <Loader />\n      )}\n      <Container>\n        <Header />\n      </Container>\n\n      <Notification />\n\n      <div className=\"page__content\">\n        <Outlet />\n      </div>\n\n      <Footer />\n      <ScrollToTop />\n    </div>\n  );\n};\n\nexport default App;\n","import { Pet } from '../types/Pet';\n\nexport const checkFav = (pets: Pet[], favPet: Pet) => {\n  return pets[favPet.id].name === favPet.name;\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport './Baner.scss';\nimport { Container } from '../Container';\n\nexport const Baner: React.FC = () => {\n  const banerRef = useRef<HTMLDivElement>(null);\n  const banerInfoRef = useRef<HTMLDivElement>(null);\n  const [firstLoad, setFirstLoad] = useState(true);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (firstLoad) {\n        const banerInfo = banerInfoRef.current;\n        const baner = banerRef.current;\n\n        if (banerInfo && baner) {\n          banerInfo.style.opacity = '1';\n          baner.style.transform = 'translateX(0)';\n          baner.style.opacity = '1';\n          setFirstLoad(false);\n        }\n      }\n    };\n\n    handleScroll();\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [firstLoad]);\n\n  return (\n    <div className=\"baner page__section\">\n      <Container>\n        <div className=\"baner__content\">\n          <div className=\"baner__container baner__container--img\">\n            <div className=\"baner__photo-box\" ref={banerRef}>\n              <img\n                className=\"baner__photo\"\n                src=\"./img/dog-banner.png\"\n                alt=\"Banner dog\"\n              />\n            </div>\n          </div>\n\n          <div className=\"baner__container\">\n            <div className=\"baner__info\" ref={banerInfoRef}>\n              <h1 className=\"baner__title\">What is “Pets Home”?</h1>\n              <p className=\"baner__text\">\n                We transform lives and foster friendships.\n                Our project addresses the issue of stray animals through humane\n                adoption solutions.\n                Explore our free online platform to discover your new companion\n                or assist a pet in finding its family.\n                <br />\n                <br />\n                Welcome to a community where every paw seeks a joyful future!\n              </p>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Services.scss';\nimport { Container } from '../Container';\n\nexport const Services: React.FC = () => {\n  return (\n    <div className=\"services page__section\">\n      <Container>\n        <div className=\"services__content\">\n          <h2 className=\"services__title\">\n            What can you do on our service?\n          </h2>\n\n          <div className=\"services__links\">\n            <Link\n              to=\"/pets?animalType=CAT\"\n              className=\"services__link\"\n            >\n              <div\n                className=\"services__photo-container\"\n              >\n                <img\n                  src=\"img/cat.png\"\n                  alt=\"cat\"\n                  className=\"services__photo\"\n                />\n              </div>\n\n              <p className=\"services__type\">\n                Choose a cat\n              </p>\n            </Link>\n            <Link\n              to=\"/pets?animalType=DOG\"\n              className=\"services__link\"\n            >\n              <div\n                className=\"services__photo-container\"\n              >\n                <img\n                  src=\"img/dog.png\"\n                  alt=\"dog\"\n                  className=\"services__photo\"\n                />\n              </div>\n\n              <p className=\"services__type\">\n                Choose a dog\n              </p>\n            </Link>\n\n            <Link\n              to=\"/give-for-adoption\"\n              className=\"services__link\"\n            >\n              <div\n                className=\"services__photo-container\"\n              >\n                <img\n                  src=\"img/healthcare.png\"\n                  alt=\"healthcare\"\n                  className=\"services__photo\"\n                />\n              </div>\n\n              <p className=\"services__type\">\n                Give for adoption\n              </p>\n            </Link>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n};\n","import './GivePet.scss';\nimport React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container } from '../Container';\n\nexport const GivePet: React.FC = memo(() => {\n  return (\n    <div className=\"give-pet\">\n      <Container>\n        <div className=\"give-pet__content\">\n          <div className=\"give-pet__photo-container\">\n            <div className=\"give-pet__decor-circle\"></div>\n\n            <img\n              className=\"give-pet__img\"\n              src=\"img/give-pet.png\"\n              alt=\"Woman with dog\"\n            />\n          </div>\n          <div className=\"give-pet__info\">\n            <h2 className=\"give-pet__title\">\n              Give an animal for adoption\n            </h2>\n\n            <p className=\"give-pet__text\">\n              Share your kindness and love by posting an ad for\n              an animal on our service.\n              Together we create hope and opportunity for\n              every homeless soul to find a happy home.\n              Your step is the path to a new beginning for these animals,\n              where they will receive safety and boundless love.\n              <br />\n              <br />\n              Join our community and give a second chance for a happy future!\n            </p>\n\n            <Link\n              to=\"/give-for-adoption\"\n              className=\"give-pet__link\"\n            >\n              Submit an application\n            </Link>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n});\n","export enum NotificationStatus {\n  Success = '#27ae60',\n  Warning = '#F3D060',\n  Error = '#BA0C2E',\n  None = 'transparent',\n}\n\nexport type NotificationType = {\n  message: string,\n  color: NotificationStatus,\n};\n","import './FormField.scss';\nimport React from 'react';\nimport { FieldError } from 'react-hook-form';\nimport classNames from 'classnames';\nimport { RegisterInputType } from '../../types/FormField';\n\ninterface FormFieldProps {\n  label: string;\n  type: 'text' | 'textarea';\n  placeholder: string;\n  error?: FieldError | undefined;\n  register: RegisterInputType;\n  characterCount?: number;\n  maxCharacters?: number;\n}\n\nexport const FormField: React.FC<FormFieldProps> = ({\n  label,\n  type,\n  placeholder,\n  error,\n  register,\n  characterCount = 0,\n  maxCharacters,\n}) => (\n  <div className=\"form-field\">\n    <label className=\"form-field__label\" htmlFor={label.toLowerCase()}>\n      {label}\n    </label>\n\n    {type === 'textarea' ? (\n      <textarea\n        {...register}\n        className={classNames('form-field__input form-field__input--textarea', {\n          'form-field__input--error': error,\n        })}\n        placeholder={placeholder}\n      />\n    ) : (\n      <input\n        {...register}\n        type={type}\n        className={classNames('form-field__input', {\n          'form-field__input--error': error,\n        })}\n        placeholder={placeholder}\n      />\n    )}\n\n    {error && <p className=\"form-field__error\">{error.message}</p>}\n\n    {type === 'textarea'\n      && !error\n      && characterCount > 0\n      && maxCharacters\n      && (characterCount > maxCharacters)\n      && (\n        <p className=\"form-field__error form-field__error--right\">\n          {`${characterCount}/${maxCharacters}`}\n        </p>\n      )}\n  </div>\n);\n","import './QuestionForm.scss';\nimport React, { memo, useRef, useState } from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport { Container } from '../Container';\nimport { NotificationStatus } from '../../types/Notification';\nimport { ContactForm } from '../../types/ContactForm';\nimport { Loader } from '../Loader';\nimport { useActions } from '../../app/hooks';\nimport { useContactUsRequestMutation } from '../../api/apiSlice';\nimport { FormField } from '../FormField/FormField';\n\nexport const QuestionForm: React.FC = memo(() => {\n  const { setNotification } = useActions();\n  const [contactUsRequest] = useContactUsRequestMutation();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset,\n    formState: { errors, isValid },\n  } = useForm<ContactForm>({\n    mode: 'onBlur',\n  });\n  const [isLoading, setIsloading] = useState(false);\n  const questionRef = useRef(null);\n  const message = watch('message');\n\n  const onSubmit: SubmitHandler<ContactForm> = (data: ContactForm) => {\n    setIsloading(true);\n\n    contactUsRequest(data)\n      .unwrap()\n      .then(() => {\n        setNotification({\n          message: 'We contact with you soon',\n          color: NotificationStatus.Success,\n        });\n\n        reset();\n      })\n      .catch(() => {\n        setNotification({\n          message: 'Something went wrong! Try later',\n          color: NotificationStatus.Error,\n        });\n      })\n      .finally(() => {\n        setIsloading(false);\n      });\n  };\n\n  return (\n    <div className=\"question\" ref={questionRef}>\n      {isLoading && <Loader />}\n      <Container>\n        <div className=\"question__content\">\n          <div className=\"question__box\">\n            <div className=\"question__top-box\">\n              <h2 className=\"question__title\">Do you have any questions?</h2>\n\n              <p className=\"question__sub-title\">\n                Ask any question and we will answer it\n              </p>\n            </div>\n\n            <div className=\"question__form-box\">\n              <form\n                className=\"question__form\"\n                onSubmit={handleSubmit(onSubmit)}\n              >\n                <div className=\"question__fields\">\n                  <div className=\"question__field\">\n                    <FormField\n                      label=\"Name\"\n                      type=\"text\"\n                      placeholder=\"Your name\"\n                      error={errors?.name}\n                      register={register('name', {\n                        required: 'Name is required!',\n                        pattern: {\n                          value: /^[a-zA-Z ']+$/,\n                          message: 'Invalid characters',\n                        },\n                        minLength: {\n                          value: 3,\n                          message: 'Name must be at least 3 characters long',\n                        },\n                        maxLength: {\n                          value: 15,\n                          message: 'Name must be less then 15 characters long',\n                        },\n                      })}\n                    />\n                  </div>\n\n                  <div className=\"question__field\">\n                    <FormField\n                      label=\"Email\"\n                      type=\"text\"\n                      placeholder=\"Igor_Yakiv@gmail.com\"\n                      error={errors?.email}\n                      register={register('email', {\n                        required: 'Email is required!',\n                        pattern: {\n                          value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                          message: 'Please enter a valid email',\n                        },\n                      })}\n                    />\n                  </div>\n\n                  <div className=\"question__field\">\n                    <FormField\n                      label=\"Your question\"\n                      type=\"textarea\"\n                      placeholder=\"Write your question here\"\n                      error={errors?.message}\n                      register={register('message', {\n                        required: 'Please type at least 10 characters.',\n                        minLength: {\n                          value: 10,\n                          message: 'Please type at least 10 characters.',\n                        },\n                        maxLength: {\n                          value: 300,\n                          message: 'Please type less than 300 characters.',\n                        },\n                      })}\n                      characterCount={message?.length}\n                      maxCharacters={300}\n                    />\n                  </div>\n                </div>\n\n                <button\n                  type=\"submit\"\n                  className=\"question__button\"\n                  disabled={!isValid}\n                >\n                  Send message\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n});\n","import { Pet } from '../../types/Pet';\n\nexport const checkFav = (favPets: Pet[], id: number) => {\n  if (favPets.length) {\n    return favPets.some(currentPet => currentPet.id === id) || false;\n  }\n\n  return false;\n};\n","import React, { memo } from 'react';\nimport classNames from 'classnames';\nimport './ButtonHeart.scss';\nimport { ReactSVG } from 'react-svg';\nimport { Pet } from '../../types/Pet';\nimport { checkFav } from './utils';\nimport { useAppSelector, useActions } from '../../app/hooks';\n\ntype Props = {\n  pet: Pet;\n};\n\nexport const ButtonHeart: React.FC<Props> = memo(({ pet }) => {\n  const favorites = useAppSelector(state => state.favorites);\n  const { addFav, removeFav } = useActions();\n  const isFav = checkFav(favorites, pet.id);\n\n  const toggleFav = () => {\n    if (!isFav) {\n      addFav(pet);\n    } else {\n      removeFav(pet);\n    }\n  };\n\n  return (\n    <button\n      className={classNames(\n        'button-fav',\n        { 'button-fav--selected': isFav },\n      )}\n      onClick={toggleFav}\n      data-cy=\"addToFavorite\"\n      aria-label=\"toggle favorite\"\n      type=\"button\"\n    >\n      <ReactSVG\n        src=\"img/icon/empty-heart.svg\"\n        className=\"pet-card__icon\"\n      />\n    </button>\n  );\n});\n","import './AdoptBtn.scss';\nimport React, { memo } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\ninterface Props {\n  id: number;\n}\n\nexport const AdoptBtn: React.FC<Props> = memo(({ id, children }) => {\n  const location = useLocation();\n\n  const state = {\n    search: location.search,\n    pathname: location.pathname,\n    previousLocation: location,\n  };\n\n  return (\n    <Link to={`/adopt/${id}`} state={state} className=\"adopt-btn\">\n      {children}\n    </Link>\n  );\n});\n","export const convertToTitleCase = (str: string) => {\n  if (!str) {\n    return '';\n  }\n\n  return str.toLowerCase().replace(/\\b\\w/g, s => s.toUpperCase());\n};\n","import './PetCard.scss';\nimport { Link, useLocation } from 'react-router-dom';\nimport React, { memo } from 'react';\nimport { ReactSVG } from 'react-svg';\nimport { ButtonHeart } from '../ButtonHeart';\nimport { AdoptBtn } from '../AdoptBtn';\nimport { Pet } from '../../types/Pet';\nimport { convertToTitleCase } from '../../helpers/getTitileCase';\n\ntype Props = {\n  pet: Pet;\n};\n\nexport const PetCard: React.FC<Props> = memo(({ pet }) => {\n  const {\n    id, name, gender, age, postImages,\n  } = pet;\n  const state = useLocation();\n  const imageUrl = `data:image/png;base64,${postImages[0].data}`;\n\n  return (\n    <li className=\"pet-card\">\n      <Link\n        to={`/pets/${id}`}\n        state={{ search: state.search }}\n      >\n        <div className=\"pet-card__img-container\">\n          <div\n            className=\"pet-card__link-img\"\n          >\n            <img\n              src={imageUrl}\n              alt={name}\n              className=\"pet-card__img\"\n            />\n          </div>\n\n          <div className=\"pet-card__fav-btn\">\n            <ButtonHeart\n              key={pet.id}\n              pet={pet}\n            />\n          </div>\n        </div>\n\n        <div className=\"pet-card__detail\">\n          <p className=\"pet-card__name\">\n            {name}\n          </p>\n\n          <div className=\"pet-card__info-block\">\n            <div className=\"pet-card__info\">\n              <div className=\"pet-card__icon-box\">\n                <ReactSVG\n                  src={`img/icon/${gender.toLowerCase()}.svg`}\n                  className=\"pet-card__icon\"\n                />\n              </div>\n\n              <div className=\"pet-card__info-text\">\n                {convertToTitleCase(gender)}\n              </div>\n            </div>\n\n            <div className=\"pet-card__info\">\n              <div className=\"pet-card__icon-box\">\n                <ReactSVG\n                  src=\"img/icon/calendar.svg\"\n                  className=\"pet-card__icon\"\n                />\n              </div>\n\n              <div className=\"pet-card__info-text\">\n                {age}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"pet-card__buttons\">\n            <AdoptBtn\n              id={pet.id}\n            >\n              Adopt\n            </AdoptBtn>\n          </div>\n        </div>\n      </Link>\n    </li>\n  );\n});\n","import './ButtonMove.scss';\nimport React from 'react';\nimport { ReactSVG } from 'react-svg';\n\ntype Props = {\n  direction: 'left' | 'right',\n  size?: 'small' | 'big',\n  onClick?: () => void,\n  disabled?: boolean,\n};\n\nexport const ButtonMove: React.FC<Props> = ({\n  direction, onClick, disabled, size = 'small',\n}) => (\n  <>\n    {size === 'big' ? (\n      <button\n        type=\"button\"\n        className={`\n          button-move\n          button-move--${direction}\n          button-move--${size}\n        `}\n        aria-label={direction === 'left' ? 'previous' : 'next'}\n      >\n        <ReactSVG\n          className=\"button-move__arrow\"\n          src={`img/icon/arrow-${direction}.svg`}\n        />\n      </button>\n    ) : (\n      <button\n        type=\"button\"\n        className={`\n          button-move\n          button-move--${size}\n        `}\n        onClick={onClick}\n        disabled={disabled}\n        aria-label={direction === 'left' ? 'previous' : 'next'}\n      >\n        <ReactSVG\n          className=\"button-move__arrow\"\n          src={`img/icon/arrow-${direction}.svg`}\n        />\n      </button>\n    )}\n  </>\n);\n","import './Swiper.scss';\nimport React, { useEffect, useRef } from 'react';\nimport Swiper from 'swiper';\nimport {\n  Grid, Keyboard, Navigation,\n} from 'swiper/modules';\nimport 'swiper/swiper-bundle.min.css';\nimport { Pet } from '../../types/Pet';\nimport { PetCard } from '../PetCard';\nimport { ButtonMove } from '../ButtonMove';\n\ntype Props = {\n  pets: Pet[];\n};\n\nexport const CardSwiper: React.FC<Props> = ({ pets }) => {\n  const swiperRef = useRef<Swiper | null>(null);\n\n  useEffect(() => {\n    swiperRef.current = new Swiper('.image-swiper', {\n      direction: 'horizontal',\n      modules: [Navigation, Grid, Keyboard],\n      navigation: {\n        prevEl: '.button-move--left',\n        nextEl: '.button-move--right',\n      },\n      centeredSlides: false,\n      grabCursor: true,\n      slidesPerView: 4.5,\n      spaceBetween: 24,\n      watchOverflow: true,\n      keyboard: {\n        enabled: true,\n        pageUpDown: true,\n      },\n      breakpoints: {\n        320: {\n          direction: 'horizontal',\n          slidesPerView: 1,\n          spaceBetween: 16,\n          grid: {\n            rows: 4,\n            fill: 'row',\n          },\n        },\n        640: {\n          slidesPerView: 2,\n          spaceBetween: 12,\n          direction: 'horizontal',\n          grid: {\n            rows: 2,\n          },\n        },\n        1024: {\n          slidesPerView: 3.3,\n          slidesPerGroup: 3,\n          spaceBetween: 20,\n          direction: 'horizontal',\n          grid: {\n            rows: 1,\n          },\n        },\n        1440: {\n          slidesPerView: 4.4,\n          slidesPerGroup: 4,\n          spaceBetween: 24,\n          direction: 'horizontal',\n          grid: {\n            rows: 1,\n          },\n        },\n      },\n    });\n  }, []);\n\n  return (\n    <div className=\"swiper-component\">\n      <div className=\"swiper\">\n        <div className=\"image-swiper swiper-container\">\n          <div className=\"image-swiper__wrapper swiper-wrapper\">\n            {pets.map(pet => (\n              <div\n                key={pet.id}\n                className=\"swiper-slide\"\n              >\n                <PetCard\n                  pet={pet}\n                />\n              </div>\n            ))}\n          </div>\n\n          {pets.length && (\n            <div className=\"image-swiper__buttons\">\n              <ButtonMove\n                direction=\"left\"\n                size=\"big\"\n              />\n\n              <ButtonMove\n                direction=\"right\"\n                size=\"big\"\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './PetsCarousel.scss';\nimport React, { memo, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { CardSwiper } from '../Swiper';\nimport { Pet } from '../../types/Pet';\nimport { Container } from '../Container';\nimport { getRandomArray } from '../../helpers/getRandomArray';\n\ntype Props = {\n  pets: Pet[];\n};\n\nexport const PetsCarousel: React.FC<Props> = memo(({ pets }) => {\n  const { pathname } = useLocation();\n  const randomPets = useMemo(() => pets && getRandomArray(pets, 20), [pets]);\n\n  return (\n    <div className=\"pets-carousel\">\n      <Container>\n        <div className=\"pets-carousel__top\">\n          {pathname === '/' ? (\n            <>\n              <h2 className=\"pets-carousel__title\">\n                Pick a friend\n              </h2>\n\n              <p className=\"pets-carousel__count\">\n                {`${pets.length} available`}\n              </p>\n            </>\n          ) : (\n            <h2 className=\"pets-carousel__title\">\n              They are also looking for homes\n            </h2>\n          )}\n        </div>\n      </Container>\n\n      {pets.length > 0 && (\n        <CardSwiper\n          pets={randomPets}\n        />\n      )}\n    </div>\n  );\n});\n","import { Pet } from '../types/Pet';\n\nexport const getRandomArray = (arr: Pet[], length: number) => {\n  const shuffled = [...arr].sort(() => 0.5 - Math.random());\n  const limit = arr.length < length ? arr.length : length;\n\n  return shuffled.slice(0, limit);\n};\n","import React from 'react';\nimport './HomePage.scss';\nimport { Baner } from '../../components/Baner';\nimport { Services } from '../../components/Services';\nimport { GivePet } from '../../components/GivePet';\nimport { QuestionForm } from '../../components/QuestionForm';\nimport { PetsCarousel } from '../../components/PetsCarousel';\nimport { Loader } from '../../components/Loader';\nimport { useGetPetsQuery } from '../../api/apiSlice';\nimport { Pet } from '../../types/Pet';\n\nexport const HomePage: React.FC = () => {\n  const {\n    data: pets = [] as Pet[],\n    isLoading: petsLoading,\n  } = useGetPetsQuery();\n\n  return (\n    <div className=\"home-page\">\n      <Baner />\n      <Services />\n      <GivePet />\n      {pets.length > 0 && (\n        <PetsCarousel\n          pets={pets}\n        />\n      )}\n      <QuestionForm\n        key=\"home-page\"\n      />\n      {petsLoading && (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","import React, { memo } from 'react';\n\nexport const ErrorPage: React.FC = memo(() => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n});\n","import React, {\n  useState,\n  useRef,\n  ChangeEvent,\n  memo,\n  useEffect,\n} from 'react';\nimport { ReactSVG } from 'react-svg';\nimport './ImageUpload.scss';\nimport classNames from 'classnames';\n\ninterface Props {\n  onChange: (data: File | null) => void;\n  currentInput: boolean;\n  handlePreviewChange: () => void;\n  clearPreview: boolean;\n}\n\nexport const ImageUpload: React.FC<Props> = memo(\n  ({\n    onChange,\n    currentInput,\n    handlePreviewChange,\n    clearPreview,\n  }) => {\n    const [preview, setPreview] = useState<string | null>(null);\n    const fileInputRef = useRef<HTMLInputElement>(null);\n\n    const handleImageChange = (file: File | null) => {\n      if (file) {\n        const reader = new FileReader();\n\n        reader.onloadend = () => {\n          setPreview(reader.result as string);\n        };\n\n        reader.readAsDataURL(file);\n      } else {\n        setPreview(null);\n      }\n\n      onChange(file);\n      handlePreviewChange();\n    };\n\n    const handleClick = (e: React.MouseEvent) => {\n      e.preventDefault();\n      fileInputRef.current?.click();\n    };\n\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n      const file = event.target.files?.[0];\n\n      if (file && file.type.startsWith('image/')) {\n        handleImageChange(file);\n      }\n    };\n\n    useEffect(() => {\n      if (clearPreview) {\n        setPreview(null);\n      }\n    }, [clearPreview]);\n\n    return (\n      <div\n        className={classNames(\n          'image-upload',\n          { 'image-upload--current': currentInput },\n        )}\n      >\n        {currentInput && (\n          <>\n            <button\n              type=\"button\"\n              onClick={handleClick}\n              className=\"image-upload__button\"\n              aria-label=\"Add image\"\n            >\n              <div className=\"image-upload__icon-box\">\n                <ReactSVG\n                  src=\"img/icon/plus.svg\"\n                  className=\"\n                  image-upload__icon\n                  image-upload__icon--add\"\n                />\n              </div>\n            </button>\n\n            <input\n              type=\"file\"\n              ref={fileInputRef}\n              style={{ display: 'none' }}\n              accept=\"image/*\"\n              onChange={handleChange}\n            />\n          </>\n        )}\n\n        {!currentInput && preview && (\n          <>\n            <img\n              src={preview}\n              className=\"image-upload__img\"\n              alt=\"Preview\"\n            />\n\n            <div\n              className=\"image-upload__icon-box image-upload__icon-box--remove\"\n            >\n              <ReactSVG\n                src=\"img/icon/close.svg\"\n                className=\"image-upload__icon\"\n                onClick={() => handleImageChange(null)}\n              />\n            </div>\n          </>\n        )}\n      </div>\n    );\n  },\n);\n","import './FormPhoneField.scss';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Control, FieldError } from 'react-hook-form';\nimport PhoneInput from 'react-phone-number-input/react-hook-form-input';\nimport { ControlledFieldType } from '../../types/FormField';\n\ntype Props = {\n  field: ControlledFieldType;\n  control: Control<any>,\n  error?: FieldError | undefined;\n  label: string;\n  placeholder: string;\n};\n\nexport const FormPhoneField: React.FC<Props> = ({\n  label,\n  placeholder,\n  field,\n  error,\n  control,\n}) => {\n  return (\n    <div className=\"form-field\">\n      <label className=\"form-field__label\" htmlFor={label.toLowerCase()}>\n        {label}\n      </label>\n\n      <PhoneInput\n        {...field}\n        control={control}\n        country=\"UA\"\n        defaultCountry=\"UA\"\n        international\n        withCountryCallingCode\n        useNationalFormatForDefaultCountryValue\n        placeholder={placeholder}\n        className={classNames('form-field__input', {\n          'form-field__input--error': error,\n        })}\n        id={label.toLowerCase()}\n      />\n\n      {error && (\n        <p className=\"form-field__error\">\n          {error.message}\n        </p>\n      )}\n    </div>\n  );\n};\n","import './AdoptForm.scss';\nimport React, {\n  Fragment, memo, useCallback, useState,\n} from 'react';\nimport { useForm, Controller, SubmitHandler } from 'react-hook-form';\nimport { ReactSVG } from 'react-svg';\nimport { PetFormData } from '../../types/PetForm';\nimport {\n  ageOptions,\n  animalTypeOptions,\n  genderOptions,\n  ukraineRegionsOptions,\n} from '../../storage/options';\nimport CustomSelect from '../Select/Select';\nimport { ImageUpload } from '../ImageUpload/ImageUpload';\nimport { appendFormData } from '../../helpers/appendFormData';\nimport { Loader } from '../Loader';\nimport { NotificationStatus } from '../../types/Notification';\nimport { useActions } from '../../app/hooks';\nimport { useAddNewPetMutation } from '../../api/apiSlice';\nimport { FormField } from '../FormField/FormField';\nimport { FormPhoneField } from '../FormPhoneField/FormPhoneField';\n\nexport const AdoptForm: React.FC = memo(() => {\n  const { setNotification } = useActions();\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentPhotoInput, setCurrentPhotoInput] = useState(0);\n  const [addPet] = useAddNewPetMutation();\n\n  const {\n    handleSubmit,\n    control,\n    register,\n    reset,\n    getValues,\n    formState: {\n      errors, isSubmitSuccessful, isValid,\n    },\n  } = useForm<PetFormData>({\n    defaultValues: {\n      post: {},\n      images: [],\n    },\n    mode: 'onBlur',\n  });\n\n  const descriptionValue = getValues('post.description');\n  const imagesValue = getValues('images');\n\n  const onSubmit: SubmitHandler<PetFormData> = (data: PetFormData) => {\n    setIsLoading(true);\n\n    const formData = appendFormData(data);\n\n    addPet(formData)\n      .unwrap()\n      .then(() => {\n        setNotification({\n          message: 'We contact with you soon',\n          color: NotificationStatus.Success,\n        });\n\n        setTimeout(() => {\n          setCurrentPhotoInput(0);\n          reset();\n        }, 200);\n      })\n      .catch(() => {\n        setNotification({\n          message: 'Something went wrong! Try later',\n          color: NotificationStatus.Error,\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handlePreviewChange = useCallback(() => {\n    const newInputIndex = imagesValue.findIndex((photo) => !photo);\n\n    setCurrentPhotoInput((cur) => (newInputIndex >= 0\n      ? newInputIndex\n      : cur + 1));\n  }, [imagesValue]);\n\n  const handleImageChange = useCallback(\n    (file: File | null, field, index) => {\n      const updatedValues = [...field.value];\n\n      updatedValues[index] = file;\n      field.onChange(updatedValues);\n    }, [],\n  );\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} className=\"adopt-form\">\n      {isLoading && <Loader />}\n\n      <h2 className=\"adopt-form__title\">Fill the information</h2>\n\n      <section className=\"adopt-form__section\">\n        <p className=\"adopt-form__section-title\">About You</p>\n\n        <div className=\"adopt-form__section-content\">\n          <div className=\"adopt-form__field adopt-form__field--half-block\">\n            <FormField\n              label=\"Name\"\n              type=\"text\"\n              placeholder=\"Your name\"\n              register={register('post.ownerName', {\n                required: 'Name is require field!',\n                minLength: {\n                  value: 3,\n                  message: 'Name must be at least 3 characters long',\n                },\n                maxLength: {\n                  value: 15,\n                  message: 'Name must be less then 15 characters long',\n                },\n                pattern: {\n                  value: /^[a-zA-Z ']+$/,\n                  message: 'Invalid characters',\n                },\n              })}\n              error={errors?.post?.ownerName}\n            />\n          </div>\n\n          <div className=\"adopt-form__field adopt-form__field--half-block\">\n            <Controller\n              name=\"post.ownerContactPhone\"\n              control={control}\n              rules={{\n                required: 'Phone number is require field!',\n                pattern: {\n                  value: /^\\+380\\d{9}$/,\n                  message: 'Please enter valid format +380 XX XXX XXXX',\n                },\n              }}\n              render={({ field }) => (\n                <FormPhoneField\n                  field={field}\n                  control={control}\n                  error={errors.post?.ownerContactPhone}\n                  placeholder=\"Phone number\"\n                  label=\"Number\"\n                />\n              )}\n            />\n          </div>\n        </div>\n      </section>\n\n      <section className=\"adopt-form__section\">\n        <p className=\"adopt-form__section-title\">About Pet</p>\n\n        <div className=\"adopt-form__section-content\">\n          <div className=\"adopt-form__field\">\n            <FormField\n              label=\"Name\"\n              type=\"text\"\n              placeholder=\"Pet name\"\n              register={register('post.name', {\n                required: 'Pet name is require field!',\n                pattern: {\n                  value: /^[a-zA-Z ']+$/,\n                  message: 'Invalid characters',\n                },\n                minLength: {\n                  value: 2,\n                  message: 'Name must be at least 2 characters long',\n                },\n                maxLength: {\n                  value: 15,\n                  message: 'Name must be less then 15 characters long',\n                },\n              })}\n              error={errors?.post?.name}\n            />\n          </div>\n\n          <div className=\"adopt-form__field\">\n            <label\n              className=\"adopt-form__field-label\"\n              htmlFor=\"animal type\"\n            >\n              <div className=\"adopt-form__icon-box\">\n                <ReactSVG\n                  src=\"img/icon/paw.svg\"\n                  className=\"adopt-form__field-label-icon\"\n                />\n              </div>\n              Animal Type\n            </label>\n\n            <div className=\"adopt-form__radio-group\" id=\"animal type\">\n              {animalTypeOptions.map((option) => {\n                return (\n                  <Fragment key={option.value}>\n                    <input\n                      type=\"radio\"\n                      id={option.label}\n                      value={option.value}\n                      {...register('post.animalType', {\n                        required: 'Animal type is required',\n                      })}\n                      className=\"adopt-form__radio-button\"\n                    />\n                    <label\n                      htmlFor={option.label}\n                      className=\"adopt-form__radio-label\"\n                    >\n                      {option.label}\n                    </label>\n                  </Fragment>\n                );\n              })}\n            </div>\n          </div>\n\n          <div className=\"adopt-form__field\">\n            <label\n              className=\"adopt-form__field-label\"\n              htmlFor=\"gender\"\n            >\n              <div className=\"adopt-form__icon-box\">\n                <ReactSVG\n                  src=\"img/icon/gender.svg\"\n                  className=\"adopt-form__field-label-icon\"\n                />\n              </div>\n              Gender\n            </label>\n\n            <div className=\"adopt-form__radio-group\" id=\"gender\">\n              {genderOptions.map((option) => (\n                <Fragment key={option.value}>\n                  <input\n                    type=\"radio\"\n                    id={option.label}\n                    value={option.value}\n                    {...register('post.gender', {\n                      required: 'Animal gender is required',\n                    })}\n                    className=\"adopt-form__radio-button\"\n                  />\n\n                  <label\n                    htmlFor={option.label}\n                    className=\"adopt-form__radio-label\"\n                  >\n                    {option.label}\n                  </label>\n                </Fragment>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"adopt-form__field adopt-form__field--half-block\">\n            <label className=\"adopt-form__field-label\" htmlFor=\"Location\">\n              <div className=\"adopt-form__icon-box\">\n                <ReactSVG\n                  src=\"img/icon/location.svg\"\n                  className=\"adopt-form__field-label-icon\"\n                />\n              </div>\n              Location\n            </label>\n\n            <div className=\"adopt-form__custom-select\">\n              <Controller\n                name=\"post.location\"\n                control={control}\n                render={({ field }) => (\n                  <>\n                    <CustomSelect\n                      options={ukraineRegionsOptions}\n                      field={field}\n                      placeholder=\"Choose region\"\n                      id=\"Location\"\n                    />\n                    {errors?.post?.location && (\n                      <span className=\"adopt-form__error\">\n                        {errors?.post?.location.message}\n                      </span>\n                    )}\n                  </>\n                )}\n                rules={{ required: 'Location is required' }}\n              />\n            </div>\n\n          </div>\n\n          <div className=\"adopt-form__field adopt-form__field--half-block\">\n            <label className=\"adopt-form__field-label\" htmlFor=\"age\">\n              <div className=\"adopt-form__icon-box\">\n                <ReactSVG\n                  src=\"img/icon/calendar.svg\"\n                  className=\"adopt-form__field-label-icon\"\n                />\n              </div>\n              Age\n            </label>\n\n            <div className=\"adopt-form__custom-select\">\n              <Controller\n                name=\"post.age\"\n                control={control}\n                render={({ field }) => (\n                  <>\n                    <CustomSelect\n                      options={ageOptions}\n                      field={field}\n                      placeholder=\"Choose age\"\n                      id=\"age\"\n                    />\n                    {errors?.post?.age && (\n                      <span className=\"adopt-form__error\">\n                        {errors?.post?.age.message}\n                      </span>\n                    )}\n                  </>\n                )}\n                rules={{ required: 'Age is required' }}\n              />\n            </div>\n          </div>\n\n          <div className=\"adopt-form__field\">\n            <FormField\n              label=\"Description\"\n              type=\"textarea\"\n              placeholder=\"Briefly describe the pet\"\n              register={register('post.description', {\n                required: 'Please type at least 10 characters.',\n                minLength: {\n                  value: 10,\n                  message: 'Please type at least 10 characters.',\n                },\n                maxLength: {\n                  value: 300,\n                  message: 'Please type less than 300 characters.',\n                },\n              })}\n              error={errors?.post?.description}\n              characterCount={descriptionValue?.length}\n              maxCharacters={300}\n            />\n          </div>\n\n          <div className=\"adopt-form__field\">\n            <label className=\"adopt-form__field-label\" htmlFor=\"description\">\n              Photos:\n            </label>\n\n            <Controller\n              name=\"images\"\n              control={control}\n              render={({ field }) => (\n                <div className=\"adopt-form__photo-container\">\n                  {[1, 2, 3, 4].map((num, index) => (\n                    <ImageUpload\n                      key={num}\n                      onChange={(file: File | null) => handleImageChange(\n                        file, field, index,\n                      )}\n                      currentInput={currentPhotoInput === index}\n                      handlePreviewChange={handlePreviewChange}\n                      clearPreview={isSubmitSuccessful}\n                    />\n                  ))}\n                  {errors.images && (\n                    <span className=\"adopt-form__error\">\n                      {errors.images?.message}\n                    </span>\n                  )}\n                </div>\n              )}\n              rules={{ required: 'At least one photo is required' }}\n            />\n          </div>\n        </div>\n      </section>\n\n      <button\n        type=\"submit\"\n        className=\"adopt-form__button\"\n        disabled={!isValid}\n      >\n        Send\n      </button>\n    </form>\n  );\n});\n","import { PetFormData } from '../types/PetForm';\n\nexport const appendFormData = (data: PetFormData) => {\n  const formData: FormData = new FormData();\n\n  const handleData = (dataToHandle: PetFormData) => {\n    Object.keys(dataToHandle).forEach((key) => {\n      if (key === 'images') {\n        dataToHandle[key].forEach((image) => {\n          const imageKey = 'images';\n\n          if (image instanceof File) {\n            formData.append(imageKey, image);\n          }\n        });\n      } else if (\n        typeof dataToHandle[key as keyof PetFormData] === 'object'\n        && !Array.isArray(data[key as keyof PetFormData])\n      ) {\n        const serializedObject = JSON\n          .stringify(dataToHandle[key as keyof PetFormData]);\n\n        formData.append(\n          'post',\n          new Blob([serializedObject], {\n            type: 'application/json',\n          }),\n        );\n      } else {\n        formData.append(key, dataToHandle[key as keyof PetFormData] as any);\n      }\n    });\n  };\n\n  handleData(data);\n\n  return formData;\n};\n","import React, { memo } from 'react';\nimport './AdoptionPage.scss';\nimport { AdoptForm } from '../../components/AdoptForm/AdoptForm';\n\nexport const AdoptionPage: React.FC = memo(() => {\n  return (\n    <div className=\"adoption\">\n      <div className=\"adoption__content\">\n        <AdoptForm />\n      </div>\n    </div>\n  );\n});\n","import React, { memo } from 'react';\nimport './ContactUsPage.scss';\nimport { Container } from '../../components/Container';\nimport { QuestionForm } from '../../components/QuestionForm';\n\nexport const ContactUsPage: React.FC = memo(() => {\n  return (\n    <div className=\"contact-us\">\n      <div className=\"contact-us__content\">\n        <h2 className=\"contact-us__main-title\">Our contacts</h2>\n\n        <Container>\n          <ul className=\"contact-us__list\">\n            <li className=\"contact-us__info contact-us__info--visit\">\n              <p className=\"contact-us__title\">Visit us</p>\n              <a\n                href=\"https://maps.app.goo.gl/VhAycvH7Cek52o5a6\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className=\"contact-us__link\"\n              >\n                Lviv city, Frankivsk district, Naukova Street 32,\n                <br />\n                Organization for homeless animals &quot;Pets Home&quot;\n              </a>\n            </li>\n\n            <li className=\"contact-us__info contact-us__info--call\">\n              <p className=\"contact-us__title\">Call us</p>\n              <a href=\"tel:+380669718922\" className=\"contact-us__link\">\n                +38 066 971 89 22\n              </a>\n            </li>\n\n            <li className=\"contact-us__info contact-us__info--write\">\n              <p className=\"contact-us__title\">Write email</p>\n              <a href=\"mailto:pets_home@gmail.com\" className=\"contact-us__link\">\n                pets_home@gmail.com\n              </a>\n            </li>\n          </ul>\n        </Container>\n\n        <QuestionForm key=\"contact-us-page\" />\n      </div>\n    </div>\n  );\n});\n","export const generateUniqueRandomKey = (): string => {\n  const characters = 'abcdefghijklmnopqrstuvwxyz0123456789';\n  let randomKey = '';\n\n  do {\n    const randomIndex = Math.floor(Math.random() * characters.length);\n\n    randomKey += characters.charAt(randomIndex);\n  } while (randomKey.length < 9);\n\n  return randomKey;\n};\n\nexport const formatPhoneNumber = (phoneNumber: string): string => {\n  // Remove any non-digit characters from the phone number\n  const cleanedNumber = phoneNumber.replace(/\\D/g, '');\n\n  // Check if the cleaned number matches any of the formats\n  const matchWithPlus = /^\\+?380(\\d{9})$/.exec(cleanedNumber);\n  const matchWithoutPlus = /^0?(\\d{9})$/.exec(cleanedNumber);\n\n  if (matchWithPlus) {\n    // Extract the matched part\n    const numberPart = matchWithPlus[1];\n\n    // Format the phone number starting with +38 0\n    const formattedNumber = `+38 0${numberPart.slice(0, 3)} ${numberPart.slice(3, 6)} ${numberPart.slice(6, 8)} ${numberPart.slice(8)}`;\n\n    return formattedNumber;\n  }\n\n  if (matchWithoutPlus) {\n    // Extract the matched part\n    const numberPart = matchWithoutPlus[1];\n\n    // Format the phone number starting with +38 0\n    const formattedNumber = `+38 0${numberPart.slice(0, 3)} ${numberPart.slice(3, 6)} ${numberPart.slice(6, 8)} ${numberPart.slice(8)}`;\n\n    return formattedNumber;\n  }\n\n  // If no match, return the original phone number without spaces\n  return cleanedNumber;\n};\n","import React from 'react';\n\ntype Props = {\n  base64Image: string,\n  altText: string,\n};\n\nexport const ImageComponent: React.FC<Props> = ({\n  base64Image, altText, ...props\n}) => {\n  return (\n    <img\n      src={`data:image/png;base64,${base64Image}`}\n      alt={altText || 'Image'}\n      className=\"image-component\"\n      {...props}\n    />\n  );\n};\n","import './PetDetails.scss';\nimport classNames from 'classnames';\nimport React, {\n  Fragment, memo, useCallback, useState,\n} from 'react';\nimport { formatPhoneNumberIntl } from 'react-phone-number-input';\nimport { AdoptBtn } from '../AdoptBtn';\nimport { ButtonHeart } from '../ButtonHeart';\nimport { Loader } from '../Loader';\nimport { generateUniqueRandomKey } from './utils';\nimport { convertToTitleCase } from '../../helpers/getTitileCase';\nimport { useGetPetQuery } from '../../api/apiSlice';\nimport { ButtonMove } from '../ButtonMove';\nimport { ImageComponent } from '../ImageComponent';\n\ntype Props = {\n  petId: number;\n};\n\nexport const PetDetails: React.FC<Props> = memo(({ petId }) => {\n  const [selectedImg, setSelectedImg] = useState(0);\n  const { data: pet, isError, isLoading } = useGetPetQuery(petId);\n\n  const nextImg = useCallback(() => {\n    if (pet) {\n      setSelectedImg((prevSelectedImg) => {\n        return (prevSelectedImg === pet.postImages.length - 1\n          ? 0\n          : prevSelectedImg + 1);\n      });\n    }\n  }, [pet]);\n\n  const prevImg = useCallback(() => {\n    if (pet) {\n      setSelectedImg((prevSelectedImg) => (prevSelectedImg === 0\n        ? pet.postImages.length - 1\n        : prevSelectedImg - 1));\n    }\n  }, [pet]);\n\n  return (\n    <div className=\"pet-details\">\n      {isLoading && <Loader />}\n\n      {isError && <h2>Error loading pet details</h2>}\n\n      <section className=\"pet-details__section\">\n        {pet && (\n          <div className=\"pet-details__grid\">\n            <div className=\"pet-details__photos\">\n              <div className=\"pet-details__big-photo-container\">\n                {pet?.postImages.length > 1 && (\n                  <div className=\"pet-details__photo-slide-btns\">\n                    <ButtonMove\n                      direction=\"left\"\n                      onClick={prevImg}\n                      disabled={selectedImg === 0}\n                    />\n\n                    <ButtonMove\n                      direction=\"right\"\n                      onClick={nextImg}\n                      disabled={selectedImg === pet.postImages.length - 1}\n                    />\n                  </div>\n                )}\n\n                <ImageComponent\n                  base64Image={pet?.postImages[selectedImg].data}\n                  altText=\"Animal selected photo\"\n                />\n              </div>\n\n              <div className=\"pet-details__small-photos\">\n                {pet?.postImages.map((photo, index) => {\n                  const key = generateUniqueRandomKey();\n\n                  return (\n                    <Fragment key={key}>\n                      {selectedImg !== index && (\n                        <div\n                          className={classNames(\n                            'pet-details__small-photo-container',\n                            {\n                              'pet-details__small-photo-container--selected':\n                                selectedImg === index,\n                            },\n                          )}\n                          onClick={() => setSelectedImg(index)}\n                          aria-hidden\n                        >\n                          <ImageComponent\n                            altText=\"small photo\"\n                            base64Image={photo.data}\n                          />\n                        </div>\n                      )}\n                    </Fragment>\n                  );\n                })}\n              </div>\n            </div>\n\n            <div className=\"pet-details__info\">\n              <h2 className=\"pet-details__name\">{pet.name}</h2>\n\n              <ul className=\"pet-details__info-list\">\n                <li className=\"pet-details__item\">\n                  <h3 className=\"pet-details__item-title\">\n                    Age:\n                  </h3>\n                  <p className=\"pet-details__item-text\">\n                    {`${pet.age} years`}\n                  </p>\n                </li>\n\n                <li className=\"pet-details__item\">\n                  <h3 className=\"pet-details__item-title\">\n                    Type:\n                  </h3>\n                  <p className=\"pet-details__item-text\">\n                    {convertToTitleCase(pet.animalType)}\n                  </p>\n                </li>\n\n                <li className=\"pet-details__item\">\n                  <h3 className=\"pet-details__item-title\">\n                    Gender:\n                  </h3>\n                  <p className=\"pet-details__item-text\">\n                    {convertToTitleCase(pet.gender)}\n                  </p>\n                </li>\n\n                <li className=\"pet-details__item\">\n                  <h3 className=\"pet-details__item-title\">\n                    Contact details:\n                  </h3>\n                  <p className=\"pet-details__item-text\">\n                    {formatPhoneNumberIntl(pet.ownerContactPhone)}\n                  </p>\n                </li>\n\n                <li className=\"pet-details__item pet-details__item--big\">\n                  <h3 className=\"pet-details__item-title\">\n                    Description:\n                  </h3>\n                  <p className=\"pet-details__item-text\">\n                    {pet.description}\n                  </p>\n                </li>\n              </ul>\n\n              <div className=\"pet-details__buttons\">\n                <AdoptBtn id={pet.id}>Adopt</AdoptBtn>\n                <ButtonHeart pet={pet} />\n              </div>\n            </div>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n});\n","import './PetDetailPage.scss';\nimport React, { memo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container } from '../../components/Container';\nimport { PetDetails } from '../../components/PetDetails';\nimport { PetsCarousel } from '../../components/PetsCarousel';\nimport { Loader } from '../../components/Loader';\nimport { useGetPetsQuery } from '../../api/apiSlice';\nimport { Pet } from '../../types/Pet';\n\nexport const PetDetailPage: React.FC = memo(() => {\n  const { petId } = useParams();\n  const {\n    data: pets = [] as Pet[],\n    isLoading: petsLoading,\n  } = useGetPetsQuery();\n\n  return (\n    <div className=\"pet-page\">\n      {petsLoading && (\n        <Loader />\n      )}\n      <Container>\n        <div className=\"pet-page__content\">\n          <h2 className=\"pet-page__title\">Meet</h2>\n\n          {petId && (\n            <PetDetails\n              key={petId}\n              petId={+petId}\n            />\n          )}\n        </div>\n      </Container>\n\n      {pets.length > 0 && (\n        <PetsCarousel\n          pets={pets}\n        />\n      )}\n    </div>\n  );\n});\n","import React, { memo } from 'react';\nimport './PetsList.scss';\nimport { PetCard } from '../PetCard';\nimport { Pet } from '../../types/Pet';\n\ntype Props = {\n  pets: Pet[],\n};\n\nexport const PetsList: React.FC<Props> = memo(({ pets }) => {\n  return (\n    <ul className=\"pets-list\">\n      {pets.map((pet) => (\n        <PetCard\n          key={pet.id}\n          pet={pet}\n        />\n      ))}\n    </ul>\n  );\n});\n","import './NoResults.scss';\nimport React, { ReactNode, memo } from 'react';\n\ntype Props = {\n  children: ReactNode,\n};\n\nexport const NoResults: React.FC<Props> = memo(({ children }) => (\n  <div className=\"no-results\">\n    <h3 className=\"no-results__title\">\n      It seems we couldn&apos;t\n      find any pets.\n    </h3>\n\n    {children}\n\n    <div className=\"no-results__paws\"></div>\n  </div>\n));\n","import './CatalogPage.scss';\nimport React, { memo, useContext } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useActions } from '../../app/hooks';\nimport { getSearchWith } from '../../helpers/searchHelpers';\nimport { useGetFilterPetsQuery, useGetPetsQuery } from '../../api/apiSlice';\nimport { NotificationStatus } from '../../types/Notification';\nimport { Container } from '../../components/Container';\nimport { PetsList } from '../../components/PetsList';\nimport { Filters } from '../../components/Filters';\nimport { PageSizeContext } from '../../storage/PageSizeContext';\nimport { Loader } from '../../components/Loader';\nimport { NoResults } from '../../components/NoResults';\n\nexport const CatalogPage: React.FC = memo(() => {\n  const { setNotification } = useActions();\n  const { isDesktopSize, isLaptopSize } = useContext(PageSizeContext);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const {\n    data: pets,\n    isLoading: petsLoading,\n    isError: petsLoadError,\n  } = useGetPetsQuery();\n  const age = searchParams.get('age') || '';\n  const gender = searchParams.get('gender') || '';\n  const location = searchParams.get('location') || '';\n  const animalType = searchParams.get('animalType') || '';\n  const isSearch = age || gender || location || animalType;\n  const emptySearchParams = new URLSearchParams();\n  const data = {\n    age, animalType, gender, location,\n  };\n  const params = getSearchWith(emptySearchParams, data);\n  const {\n    data: filteredPets,\n    isLoading: filterLoading,\n  } = useGetFilterPetsQuery(params);\n\n  if (petsLoadError) {\n    setNotification({\n      message: 'Something went wrong! Try later',\n      color: NotificationStatus.Error,\n    });\n  }\n\n  if (!pets && !filteredPets) {\n    return <Loader />;\n  }\n\n  const petsForList = isSearch ? filteredPets : pets;\n  const petCount = petsForList ? petsForList.length : 0;\n\n  const showAllPets = () => {\n    setSearchParams(undefined);\n  };\n\n  return (\n    <div className=\"catalog\">\n      {(petsLoading || filterLoading) && <Loader />}\n\n      <Container>\n        {pets && (\n          <div className=\"catalog__content\">\n            <div className=\"catalog__top-titles\">\n              <h2 className=\"catalog__title\">Pick a friend</h2>\n              <p className=\"catalog__available-title\">{`${petCount} friends available`}</p>\n            </div>\n\n            {(isLaptopSize || isDesktopSize) && (\n              <div className=\"catalog__filters\">\n                <Filters />\n              </div>\n            )}\n\n            <div className=\"catalog__pets\">\n              {petsForList && <PetsList pets={petsForList} />}\n\n              {!petsForList?.length && isSearch\n                && !petsLoading && !filterLoading && (\n                <NoResults>\n                  <p className=\"catalog__error-message\">\n                    Don&apos;t worry, though &ndash;\n                    there are plenty more furry friends waiting for you.\n                    <br />\n                    Please, choose another filters or click button bellow.\n                  </p>\n                  <button\n                    type=\"button\"\n                    onClick={showAllPets}\n                    className=\"catalog__reset-filters\"\n                  >\n                    Show all pets\n                  </button>\n                </NoResults>\n              )}\n\n              {!petsForList?.length && !petsLoading && !isSearch && (\n                <NoResults>\n                  <p className=\"catalog__error-message\">\n                    Thank you for considering adoption!\n                    <br />\n                    Keep checking back for future updates,\n                    as new pets may become available.\n                  </p>\n                </NoResults>\n              )}\n            </div>\n          </div>\n        )}\n      </Container>\n    </div>\n  );\n});\n","import './FavoritesPage.scss';\nimport React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container } from '../../components/Container';\nimport { useAppSelector } from '../../app/hooks';\nimport { PetsList } from '../../components/PetsList';\nimport { PetsCarousel } from '../../components/PetsCarousel';\nimport { NoResults } from '../../components/NoResults';\nimport { useGetPetsQuery } from '../../api/apiSlice';\nimport { Pet } from '../../types/Pet';\nimport { Loader } from '../../components/Loader';\n\nexport const Favourites: React.FC = memo(() => {\n  const favorites = useAppSelector(state => state.favorites);\n  const {\n    data: pets = [] as Pet[],\n    isLoading: petsLoading,\n  } = useGetPetsQuery();\n\n  return (\n    <div className=\"favorites\">\n      {petsLoading && (\n        <Loader />\n      )}\n\n      <Container>\n        <div className=\"favorites__content\">\n\n          {favorites.length > 0 ? (\n            <>\n              <div className=\"favorites__top\">\n                <h1 className=\"favorites__title\">\n                  Favourites\n                </h1>\n\n                <p className=\"favorites__text\">\n                  {`${favorites.length} items`}\n                </p>\n              </div>\n\n              <PetsList\n                pets={favorites}\n              />\n            </>\n          ) : (\n            <NoResults>\n              <div className=\"favorites__error-message\">\n                <p>\n                  Looks like you haven&apos;t added\n                  any pets to your favorites yet.\n                </p>\n\n                <p>\n                  Don&apos;t worry, you can find some adorable companions\n                  waiting for you.\n                  <br />\n                  Simply click the button below to start exploring\n                  and adding your favorites!\n                </p>\n              </div>\n\n              <Link\n                to=\"/pets\"\n                className=\"favorites__find-link\"\n              >\n                Find Pets\n              </Link>\n            </NoResults>\n          )}\n        </div>\n      </Container>\n\n      {pets.length && (\n        <PetsCarousel\n          pets={pets}\n        />\n      )}\n    </div>\n  );\n});\n","import './PickUpForm.scss';\nimport React, { memo } from 'react';\nimport { useForm, SubmitHandler, Controller } from 'react-hook-form';\nimport { PickUpFormFields } from '../../types/PickUpForm';\nimport { useActions } from '../../app/hooks';\nimport { NotificationStatus } from '../../types/Notification';\nimport { usePickUpRequestMutation } from '../../api/apiSlice';\nimport { FormField } from '../FormField';\nimport { FormPhoneField } from '../FormPhoneField/FormPhoneField';\n\ntype Props = {\n  id: string,\n  handleFormClose: () => void;\n};\n\nexport const PickUpForm: React.FC<Props> = memo(({ id, handleFormClose }) => {\n  const { setNotification } = useActions();\n  const [pickUpRequest] = usePickUpRequestMutation();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    control,\n    formState: { errors, isValid },\n    reset,\n  } = useForm<PickUpFormFields>({\n    defaultValues: {\n      id,\n    },\n    mode: 'onChange',\n  });\n  const message = watch('message');\n\n  const onSubmit: SubmitHandler<PickUpFormFields> = (\n    data: PickUpFormFields,\n  ) => {\n    pickUpRequest(data)\n      .unwrap()\n      .then(() => {\n        setNotification({\n          message: 'We contact with you soon',\n          color: NotificationStatus.Success,\n        });\n\n        reset();\n      })\n      .catch(() => {\n        setNotification({\n          message: 'Something went wrong. Try later',\n          color: NotificationStatus.Error,\n        });\n      })\n      .finally(() => {\n        handleFormClose();\n      });\n  };\n\n  return (\n    <div className=\"pick-up\">\n      <form className=\"pick-up__form\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"pick-up__fields\">\n          <div className=\"pick-up__field pick-up__field--small\">\n            <FormField\n              label=\"Name\"\n              type=\"text\"\n              placeholder=\"Your name\"\n              error={errors?.name}\n              register={register('name', {\n                required: 'Name is required!',\n                minLength: {\n                  value: 3,\n                  message: 'Name must be at least 3 characters long',\n                },\n                maxLength: {\n                  value: 15,\n                  message: 'Name must be less then 15 characters long',\n                },\n                pattern: {\n                  value: /^[a-zA-Z ']+$/,\n                  message: 'Invalid characters',\n                },\n              })}\n            />\n          </div>\n\n          <div className=\"pick-up__field pick-up__field--small\">\n            <Controller\n              name=\"contactPhone\"\n              control={control}\n              rules={{\n                required: 'Phone number is require field!',\n                pattern: {\n                  value: /^\\+380\\d{9}$/,\n                  message: 'Please enter valid format +380 XX XXX XXXX',\n                },\n              }}\n              render={({ field }) => (\n                <FormPhoneField\n                  field={field}\n                  control={control}\n                  error={errors.contactPhone}\n                  placeholder=\"+380669678911\"\n                  label=\"Your number\"\n                />\n              )}\n            />\n          </div>\n\n          <div className=\"pick-up__field pick-up__field--big\">\n            <FormField\n              label=\"Your comment\"\n              type=\"textarea\"\n              placeholder=\"Text\"\n              error={errors?.message}\n              register={register('message', {\n                required: 'Please type at least 10 characters.',\n                minLength: {\n                  value: 10,\n                  message: 'Please type at least 10 characters.',\n                },\n                maxLength: {\n                  value: 300,\n                  message: 'Please type less than 300 characters.',\n                },\n              })}\n              characterCount={message?.length}\n              maxCharacters={300}\n            />\n          </div>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"pick-up__button\"\n          disabled={!isValid}\n        >\n          Send\n        </button>\n      </form>\n    </div>\n  );\n});\n","import './ModalAdoptForm.scss';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from 'react';\nimport {\n  clearAllBodyScrollLocks, disableBodyScroll,\n} from 'body-scroll-lock';\nimport { ReactSVG } from 'react-svg';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { PickUpForm } from '../PickUpForm';\nimport { IconBox } from '../IconBox';\n\nexport const ModalAdoptForm: React.FC = memo(() => {\n  const [showForm, setShowForm] = useState(false);\n  const modalRef = useRef<HTMLDivElement>(null);\n  const nodeRef = useRef(null);\n  const { id } = useParams();\n  const { state } = useLocation();\n  const navigate = useNavigate();\n  const isModalOpen = sessionStorage.getItem('isModalOpen') === 'true';\n\n  const handleClose = () => {\n    navigate(state.previousLocation.pathname);\n    sessionStorage.removeItem('isModalOpen');\n    clearAllBodyScrollLocks();\n  };\n\n  const handleFormClose = useCallback(() => {\n    setShowForm(false);\n    clearAllBodyScrollLocks();\n  }, []);\n\n  const handleModalClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => {\n    if (event.target === event.currentTarget) {\n      handleClose();\n    }\n  };\n\n  useEffect(() => {\n    const observerRefValue = modalRef.current;\n\n    if (!observerRefValue || !id || isModalOpen) {\n      handleClose();\n\n      return undefined;\n    }\n\n    setShowForm(true);\n    disableBodyScroll(observerRefValue);\n\n    const handleModalOpen = () => {\n      sessionStorage.setItem('isModalOpen', 'true');\n    };\n\n    handleModalOpen();\n\n    return () => {\n      handleClose();\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div\n      className=\"modal\"\n      onDoubleClick={handleModalClick}\n      ref={modalRef}\n      key={id}\n    >\n      <CSSTransition\n        in={showForm}\n        timeout={300}\n        nodeRef={nodeRef}\n        classNames=\"modal__fade\"\n        appear\n        onExited={() => handleClose()}\n\n      >\n        <div className=\"modal__content\" ref={nodeRef}>\n          <div className=\"modal__top\">\n            <h3 className=\"modal__title\">Pick up your animal</h3>\n            <div className=\"modal__cross\">\n              <IconBox>\n                <ReactSVG\n                  src=\"img/icon/close.svg\"\n                  onClick={() => setShowForm(false)}\n                />\n              </IconBox>\n            </div>\n          </div>\n\n          {id && (\n            <PickUpForm\n              id={id}\n              handleFormClose={handleFormClose}\n            />\n          )}\n\n        </div>\n      </CSSTransition>\n    </div>\n  );\n});\n","import React from 'react';\nimport {\n  Route, Routes, Navigate, useLocation,\n} from 'react-router-dom';\nimport App from './App';\nimport { HomePage } from './pages/HomePage';\nimport { ErrorPage } from './pages/ErrorPage/ErrorPage';\nimport { AdoptionPage } from './pages/AdoptionPage';\nimport { ContactUsPage } from './pages/ContactUsPage';\nimport { PetDetailPage } from './pages/PetDetailPage';\nimport { CatalogPage } from './pages/CatalogPage';\nimport { Favourites } from './pages/FavoritesPage';\nimport { ModalAdoptForm } from './components/ModalAdoptForm';\n\nexport const Root: React.FC = () => {\n  const location = useLocation();\n  const previousLocation = location.state?.previousLocation;\n\n  return (\n    <>\n      <Routes location={previousLocation || location}>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n          <Route path=\"/pets\">\n            <Route index element={<CatalogPage />} />\n            <Route path=\":petId\" element={<PetDetailPage />} />\n          </Route>\n          <Route path=\"/contacts\" element={<ContactUsPage />} />\n          <Route path=\"/pet\" element={<PetDetailPage />} />\n          <Route path=\"/give-for-adoption\" element={<AdoptionPage />} />\n          <Route path=\"/favorites\" element={<Favourites />} />\n        </Route>\n\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Routes>\n      {previousLocation && (\n        <Routes>\n          <Route path=\"/adopt/:id\" element={<ModalAdoptForm />} />\n        </Routes>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\n\nexport function loadFromLocalStorage<T>(key: string, initialValue: T) {\n  try {\n    const serializedState = localStorage.getItem(key);\n\n    return serializedState ? JSON.parse(serializedState) : initialValue;\n  } catch (e) {\n    return initialValue;\n  }\n}\n\n// Save state to local storage\nexport function saveToLocalStorage<T>(\n  key: string,\n  newValue: T,\n) {\n  try {\n    const serializedState = JSON.stringify(newValue);\n\n    localStorage.setItem(key, serializedState);\n  } catch (e) {\n    return undefined;\n  }\n\n  return undefined;\n}\n\nexport function useLocalStorage<T>(\n  key: string,\n  initialValue: T,\n): [\n    T,\n    (v: T) => void,\n  ] {\n  const [value, setValue] = useState(() => {\n    const data = localStorage.getItem(key);\n\n    if (!data) {\n      return initialValue;\n    }\n\n    try {\n      return JSON.parse(data);\n    } catch {\n      localStorage.remove(key);\n\n      return initialValue;\n    }\n  });\n\n  const save = (newValue: T) => {\n    setValue(newValue);\n    localStorage.setItem(key, JSON.stringify(newValue));\n  };\n\n  return [value, save];\n}\n","// eslint-disable-next-line import/no-cycle\nimport {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n  Middleware,\n} from '@reduxjs/toolkit';\nimport debounce from 'debounce';\nimport { createLogger } from 'redux-logger';\nimport { apiSlice } from '../api/apiSlice';\nimport { notificationReducer } from '../storage/notification';\nimport { addFav, favoritesReducer, removeFav } from '../storage/favorites';\nimport {\n  loadFromLocalStorage, saveToLocalStorage,\n} from '../hooks/useLocalStorage';\nimport { Pet } from '../types/Pet';\n\nconst reducers = combineReducers({\n  notification: notificationReducer,\n  favorites: favoritesReducer,\n  [apiSlice.reducerPath]: apiSlice.reducer,\n});\n\nconst favoritesPets = loadFromLocalStorage('favorites', [] as Pet[]);\n\nconst favoritesInitialState = favoritesPets;\n\nconst localStorageMiddleware: Middleware = (store) => (next) => (action) => {\n  const result = next(action);\n\n  if (action.type === addFav.type || action.type === removeFav.type) {\n    const favoritesState = store.getState().favorites;\n\n    saveToLocalStorage('favorites', favoritesState);\n  }\n\n  return result;\n};\n\nconst logger = createLogger();\n\nlet middleware: Middleware[] = [];\n\nmiddleware.push(apiSlice.middleware as Middleware);\nmiddleware.push(localStorageMiddleware as Middleware);\n\nif (process.env.NODE_ENV === 'development') {\n  middleware = [...middleware, logger as Middleware];\n}\n\nexport const store = configureStore({\n  reducer: reducers,\n  preloadedState: {\n    favorites: favoritesInitialState,\n  },\n  middleware: (gDM) => gDM().concat(middleware),\n});\n\nstore.subscribe(debounce(() => {\n  saveToLocalStorage(\n    'favorites', store.getState().favorites,\n  );\n}, 800));\n\nexport type AppDispatch = typeof store.dispatch;\nexport type TypeRootState = ReturnType<typeof store.getState>;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  TypeRootState,\n  unknown,\n  Action<string>\n>;\n/* eslint-enable @typescript-eslint/indent */\n","import './index.scss';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { Root } from './Root';\nimport { PageSizeProvider } from './storage/PageSizeContext';\nimport { store } from './app/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <PageSizeProvider>\n          <Root />\n        </PageSizeProvider>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}